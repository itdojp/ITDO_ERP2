# ITDO ERP v2 - Frontend Application Deployment
# CC03 v48.0 Business-Aligned Infrastructure

apiVersion: apps/v1
kind: Deployment
metadata:
  name: itdo-erp-frontend
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "2.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: itdo-erp-frontend
        app.kubernetes.io/component: frontend
        app.kubernetes.io/version: "2.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/nginx_status"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: itdo-erp-frontend
        image: ghcr.io/itdojp/itdo-erp-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # Backend API Configuration
        - name: BACKEND_URL
          value: "http://itdo-erp-backend-service.itdo-erp-prod.svc.cluster.local:8000"
        - name: API_BASE_URL
          value: "/api/v1"
        
        # Frontend Configuration
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: ENVIRONMENT
        
        # Kubernetes-specific
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        
        # Volume Mounts
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-logs
          mountPath: /var/log/nginx
        - name: tmp
          mountPath: /tmp
      
      # Volumes
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      
      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - itdo-erp-frontend
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for node taints
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: itdo-erp-frontend-service
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-frontend
    app.kubernetes.io/component: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-northeast-1:123456789012:certificate/12345678-1234-1234-1234-123456789012
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    external-dns.alpha.kubernetes.io/hostname: itdo-erp.com
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: itdo-erp-frontend

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: itdo-erp-frontend-hpa
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-frontend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: itdo-erp-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: itdo-erp-frontend-pdb
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-frontend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-frontend

---
# Ingress for HTTPS and Custom Domain
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: itdo-erp-ingress
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
spec:
  tls:
  - hosts:
    - itdo-erp.com
    - www.itdo-erp.com
    secretName: itdo-erp-tls
  rules:
  - host: itdo-erp.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: itdo-erp-frontend-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: itdo-erp-backend-service
            port:
              number: 8000
  - host: www.itdo-erp.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: itdo-erp-frontend-service
            port:
              number: 80

---
# Network Policy for Frontend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: itdo-erp-frontend-netpol
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-frontend
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: itdo-erp-monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: itdo-erp-prod
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: itdo-erp-backend
    ports:
    - protocol: TCP
      port: 8000
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53