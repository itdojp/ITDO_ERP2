# ITDO ERP v2 - Backend Application Deployment
# CC03 v48.0 Business-Aligned Infrastructure

apiVersion: apps/v1
kind: Deployment
metadata:
  name: itdo-erp-backend
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-backend
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "2.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: itdo-erp-backend
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "2.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: itdo-erp-backend
        image: ghcr.io/itdojp/itdo-erp-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        # Database Configuration
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: POSTGRES_PASSWORD
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: DATABASE_URL
        
        # Redis Configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: REDIS_PASSWORD
        
        # Application Configuration
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: LOG_LEVEL
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: DEBUG
        
        # Security Configuration
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: SECRET_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: JWT_SECRET_KEY
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: ALLOWED_HOSTS
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: CORS_ORIGINS
        
        # Performance Configuration
        - name: WORKER_PROCESSES
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: WORKER_PROCESSES
        - name: MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: MAX_CONNECTIONS
        
        # Monitoring Configuration
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: METRICS_ENABLED
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: METRICS_PORT
        
        # Kubernetes-specific
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/v1/health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        
        # Volume Mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache
        - name: var-log
          mountPath: /var/log
      
      # Init Container for Database Migration
      initContainers:
      - name: db-migration
        image: ghcr.io/itdojp/itdo-erp-backend:latest
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          echo "Running database migrations..."
          alembic upgrade head
          echo "Database migrations completed successfully"
        envFrom:
        - configMapRef:
            name: itdo-erp-config
        - secretRef:
            name: itdo-erp-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      
      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - itdo-erp-backend
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for node taints
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: itdo-erp-backend-service
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-backend
    app.kubernetes.io/component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: itdo-erp-backend

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: itdo-erp-backend-hpa
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-backend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: itdo-erp-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: itdo-erp-backend-pdb
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-backend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-backend

---
# Backend Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: itdo-erp-backend-monitor
  namespace: itdo-erp-prod
  labels:
    app.kubernetes.io/name: itdo-erp-backend
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: itdo-erp-backend
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    honorLabels: true