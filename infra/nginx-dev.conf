# Ultra-Optimized Nginx Configuration for Development
# Performance: Load balancing, caching, compression, security

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
worker_shutdown_timeout 10s;

# Error log with appropriate level for development
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ============================================================================
    # Logging Configuration - Development Optimized
    # ============================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    log_format performance '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" rt=$request_time '
                          'uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" '
                          'urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/performance.log performance;

    # ============================================================================
    # Performance Optimizations
    # ============================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    send_timeout 30;
    client_body_timeout 30;
    client_header_timeout 30;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # ============================================================================
    # Compression - Gzip and Brotli
    # ============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;

    # Brotli compression (better than gzip)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/svg+xml
        font/woff
        font/woff2;

    # ============================================================================
    # Security Headers - Development Appropriate
    # ============================================================================
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # CSP disabled for development flexibility
    # add_header Content-Security-Policy "default-src 'self'" always;

    # ============================================================================
    # Rate Limiting - Light for Development
    # ============================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ============================================================================
    # Upstream Definitions - Backend Load Balancing
    # ============================================================================
    upstream backend_servers {
        least_conn;
        server backend-dev:8000 max_fails=3 fail_timeout=30s;
        # Add more backend servers for load testing
        # server backend-dev-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend_servers {
        least_conn;
        server frontend-dev:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # ============================================================================
    # Caching Configuration
    # ============================================================================
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m 
                     max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m 
                     max_size=500m inactive=1d use_temp_path=off;

    # ============================================================================
    # Main Server Block - Development Proxy
    # ============================================================================
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost dev.itdo.local *.dev.itdo.local;

        # Security
        server_tokens off;
        
        # Logging
        access_log /var/log/nginx/dev.access.log performance;
        error_log /var/log/nginx/dev.error.log;

        # ========================================================================
        # API Routes - Backend Proxy with Caching
        # ========================================================================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn addr 10;

            # Proxy configuration
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # Performance optimizations
            proxy_http_version 1.1;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

            # Caching for GET requests only
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Cache headers
            add_header X-Cache-Status $upstream_cache_status;
        }

        # ========================================================================
        # Authentication API - Special Rate Limiting
        # ========================================================================
        location /api/v1/auth/ {
            limit_req zone=login burst=5 nodelay;
            limit_conn addr 5;

            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # ========================================================================
        # WebSocket Support for Hot-Reload
        # ========================================================================
        location /ws {
            proxy_pass http://frontend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # ========================================================================
        # Static Assets - Aggressive Caching
        # ========================================================================
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            
            # Aggressive caching for static assets
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Client-side caching
            expires 1h;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # ========================================================================
        # Frontend Application - SPA Support
        # ========================================================================
        location / {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Performance settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering on;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # No caching for HTML
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # ========================================================================
        # Health Check Endpoints
        # ========================================================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /nginx-health {
            access_log off;
            stub_status on;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }

        # ========================================================================
        # Development Tools Proxying
        # ========================================================================
        location /pgadmin/ {
            proxy_pass http://pgadmin-dev:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redis/ {
            proxy_pass http://redis-commander:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /metrics/ {
            proxy_pass http://monitoring-dev:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ========================================================================
        # Error Pages
        # ========================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Not Found";
        }
        
        location = /50x.html {
            internal;
            return 500 "Internal Server Error";
        }
    }

    # ============================================================================
    # HTTPS Server (Development with self-signed cert)
    # ============================================================================
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name localhost dev.itdo.local;
    #     
    #     ssl_certificate /etc/nginx/ssl/dev.crt;
    #     ssl_certificate_key /etc/nginx/ssl/dev.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Reuse same configuration as HTTP server
    #     include /etc/nginx/conf.d/dev-common.conf;
    # }
}