# Istio Gateway Configuration for ITDO ERP
# Advanced traffic management with security policies

apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: itdo-erp-api-gateway
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp-gateway
    app.kubernetes.io/component: ingress
spec:
  selector:
    istio: ingressgateway
  servers:
  # Production API Gateway (HTTPS Only)
  - port:
      number: 443
      name: https-api
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: itdo-erp-api-tls-secret
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
      cipherSuites:
      - "ECDHE-RSA-AES256-GCM-SHA384"
      - "ECDHE-RSA-AES128-GCM-SHA256"
      - "ECDHE-RSA-CHACHA20-POLY1305"
    hosts:
    - "api.itdo-erp.com"
    
  # Frontend Application Gateway
  - port:
      number: 443
      name: https-app
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: itdo-erp-app-tls-secret
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
    hosts:
    - "app.itdo-erp.com"
    - "www.itdo-erp.com"
    
  # Monitoring Gateway (Restricted Access)
  - port:
      number: 443
      name: https-monitoring
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: itdo-erp-monitoring-tls-secret
    hosts:
    - "monitor.itdo-erp.com"
    - "grafana.itdo-erp.com"
    - "prometheus.itdo-erp.com"
    
  # HTTP to HTTPS Redirect
  - port:
      number: 80
      name: http-redirect
      protocol: HTTP
    hosts:
    - "api.itdo-erp.com"
    - "app.itdo-erp.com"
    - "www.itdo-erp.com"
    - "monitor.itdo-erp.com"
    - "grafana.itdo-erp.com"
    - "prometheus.itdo-erp.com"
    tls:
      httpsRedirect: true

---
# Internal Service Gateway (East-West Traffic)
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: itdo-erp-internal-gateway
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp-internal-gateway
    app.kubernetes.io/component: internal
spec:
  selector:
    istio: eastwestgateway  # Internal gateway
  servers:
  - port:
      number: 15443  # Istio internal port
      name: tls
      protocol: TLS
    tls:
      mode: ISTIO_MUTUAL  # mTLS for internal communication
    hosts:
    - "*.local"
    - "*.itdo-erp.svc.cluster.local"

---
# Egress Gateway for External API Calls
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: itdo-erp-egress-gateway
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp-egress-gateway
    app.kubernetes.io/component: egress
spec:
  selector:
    istio: egressgateway
  servers:
  # External HTTPS Traffic
  - port:
      number: 443
      name: https-external
      protocol: HTTPS
    hosts:
    - "*.googleapis.com"      # Google Cloud APIs
    - "*.amazonaws.com"       # AWS APIs
    - "*.stripe.com"          # Payment processing
    - "*.sendgrid.com"        # Email service
    - "*.twilio.com"          # SMS service
    - "github.com"            # Code repository
    - "registry-1.docker.io"  # Docker Hub
    tls:
      mode: PASSTHROUGH
      
  # External HTTP Traffic (Limited)
  - port:
      number: 80
      name: http-external
      protocol: HTTP
    hosts:
    - "httpbin.org"           # Testing service
    - "api.exchangerate-api.com"  # Exchange rate API

---
# Multi-Cluster Gateway (for future multi-region setup)
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: itdo-erp-cross-network-gateway
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-network-gateway
spec:
  selector:
    istio: eastwestgateway
  servers:
  - port:
      number: 15443
      name: tls
      protocol: TLS
    tls:
      mode: ISTIO_MUTUAL
    hosts:
    - "*.local"

---
# Load Balancer Service for Ingress Gateway
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway-lb
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istio-ingressgateway-lb
  annotations:
    # AWS Load Balancer Configuration
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    # External DNS
    external-dns.alpha.kubernetes.io/hostname: "api.itdo-erp.com,app.itdo-erp.com,monitor.itdo-erp.com"
spec:
  type: LoadBalancer
  selector:
    app: istio-proxy
    istio: ingressgateway
  ports:
  - name: status-port
    port: 15021
    targetPort: 15021
    protocol: TCP
  - name: http2
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: tcp
    port: 31400
    targetPort: 31400
    protocol: TCP
  - name: tls
    port: 15443
    targetPort: 15443
    protocol: TCP
  loadBalancerSourceRanges:
  - "0.0.0.0/0"  # Allow from internet for ingress

---
# East-West Gateway Service for Internal Communication
apiVersion: v1
kind: Service
metadata:
  name: istio-eastwestgateway
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istio-eastwestgateway
    istio: eastwestgateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    istio: eastwestgateway
  ports:
  - name: status-port
    port: 15021
    targetPort: 15021
  - name: tls
    port: 15443
    targetPort: 15443
  loadBalancerSourceRanges:
  - "10.0.0.0/8"
  - "172.16.0.0/12"
  - "192.168.0.0/16"

---
# Gateway Health Check
apiVersion: v1
kind: Service
metadata:
  name: istio-gateway-healthcheck
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istio-gateway-healthcheck
spec:
  selector:
    app: istio-proxy
    istio: ingressgateway
  ports:
  - name: healthcheck
    port: 15021
    targetPort: 15021
    protocol: TCP
  type: ClusterIP
