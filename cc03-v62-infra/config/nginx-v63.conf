# CC03 v63.0 - 3日間集中実用インフラ構築
# Day 1: 本番対応NGINX設定 (v62実績ベース改良版)

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ログ設定 - 構造化ログ対応
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    log_format json escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status"'
    '}';

    access_log /var/log/nginx/access.log json;

    # パフォーマンス設定 - 高負荷対応
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75s;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;

    # バッファ設定最適化
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;

    # Gzip圧縮 - 最適化
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype
        application/vnd.ms-fontobject;

    # Brotli圧縮 (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # セキュリティヘッダー強化
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self' data: https://fonts.gstatic.com; frame-ancestors 'none'; base-uri 'self'; object-src 'none';" always;

    # レート制限 - DDoS対策強化
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=500r/s;
    limit_conn_zone $binary_remote_addr zone=perip:10m;

    # IP制限設定
    geo $limit {
        default 1;
        10.0.0.0/8 0;
        172.16.0.0/12 0;
        192.168.0.0/16 0;
        127.0.0.1/32 0;
    }

    map $limit $limit_key {
        0 "";
        1 $binary_remote_addr;
    }

    # SSL設定 - TLS 1.3対応強化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_early_data on;

    # アップストリーム定義 - ロードバランシング改良
    upstream backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream keycloak {
        server keycloak:8080 max_fails=3 fail_timeout=30s;
        keepalive 16;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream grafana {
        server grafana:3000 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }

    upstream prometheus {
        server prometheus:9090 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }

    upstream alertmanager {
        server alertmanager:9093 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }

    # HTTP to HTTPS リダイレクト
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # メインアプリケーション - ゼロダウンタイム対応
    server {
        listen 443 ssl http2;
        server_name itdo-erp-v63.com www.itdo-erp-v63.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # HSTS強化
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # 接続制限
        limit_conn perip 100;

        # フロントエンド - SPA対応
        location / {
            limit_req zone=general burst=500 nodelay;
            limit_req_status 429;
            
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            # SPA fallback
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API エンドポイント - 高パフォーマンス
        location /api/ {
            limit_req zone=api burst=200 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;

            # API キャッシュ
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
        }

        # WebSocket サポート改良
        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            proxy_buffering off;
        }

        # ヘルスチェック - 監視対応
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 静的ファイルキャッシュ最適化
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            limit_req zone=static burst=1000 nodelay;
            
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            access_log off;
            
            proxy_set_header Host $host;
            proxy_buffering on;
            proxy_cache_valid 200 1y;
        }

        # セキュリティ設定強化
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf|bak|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 開発ツールブロック
        location ~ /(wp-admin|wp-login|phpMyAdmin|admin|phpmyadmin) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # API専用サブドメイン - パフォーマンス最適化
    server {
        listen 443 ssl http2;
        server_name api.itdo-erp-v63.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location / {
            limit_req zone=api burst=200 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        location /health {
            access_log off;
            proxy_pass http://backend/api/v1/health;
        }
    }

    # 認証サーバー - セキュリティ強化
    server {
        listen 443 ssl http2;
        server_name auth.itdo-erp-v63.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location / {
            limit_req zone=auth burst=50 nodelay;
            
            proxy_pass http://keycloak;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }

    # 監視・管理インターフェース - 改良版
    server {
        listen 443 ssl http2;
        server_name monitor.itdo-erp-v63.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # 内部ネットワーク・VPN許可
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        # VPN IP ranges (customize as needed)
        allow 203.0.113.0/24;
        deny all;

        # Grafana ダッシュボード
        location / {
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for live updates
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Prometheus メトリクス
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Alertmanager
        location /alertmanager/ {
            proxy_pass http://alertmanager/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # cAdvisor
        location /cadvisor/ {
            proxy_pass http://cadvisor:8080/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }

    # デプロイメント用エンドポイント
    server {
        listen 443 ssl http2;
        server_name deploy.itdo-erp-v63.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # CI/CD systems only
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        # GitHub Actions IP ranges (update as needed)
        allow 140.82.112.0/20;
        allow 185.199.108.0/22;
        deny all;

        location /webhook {
            proxy_pass http://backend/api/v1/deploy/webhook;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            return 200 "deploy-ready\n";
            add_header Content-Type text/plain;
        }
    }
}