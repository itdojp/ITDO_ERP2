version: '3.9'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-healthcheck-db: &healthcheck-db
  test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
  interval: 10s
  timeout: 5s
  retries: 5

services:
  postgres:
    image: postgres:15-alpine
    container_name: itdo_postgres_dev
    environment:
      POSTGRES_USER: itdo_user
      POSTGRES_PASSWORD: itdo_password
      POSTGRES_DB: itdo_erp
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck: *healthcheck-db
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    container_name: itdo_redis_dev
    command: redis-server --requirepass redis_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: itdo_keycloak_dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: itdo_user
      KC_DB_PASSWORD: itdo_password
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    logging: *default-logging

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: itdo_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@itdo.jp
      PGLADMIN_DEFAULT_PASSWORD: pgadmin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    logging: *default-logging

  mailhog:
    image: mailhog/mailhog:latest
    container_name: itdo_mailhog_dev
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    logging: *default-logging

  prometheus:
    image: prom/prometheus:latest
    container_name: itdo_prometheus_dev
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    logging: *default-logging

  grafana:
    image: grafana/grafana:latest
    container_name: itdo_grafana_dev
    environment:
      GF_SECURITY_ADMIN_PASSWORD: grafana_password
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    logging: *default-logging

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: itdo_backend_dev
    environment:
      DATABASE_URL: postgresql://itdo_user:itdo_password@postgres:5432/itdo_erp
      REDIS_URL: redis://:redis_password@redis:6379/0
      KEYCLOAK_URL: http://keycloak:8080
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG
    volumes:
      - ./backend:/app
      - backend_cache:/root/.cache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging: *default-logging

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: itdo_frontend_dev
    environment:
      VITE_API_URL: http://backend:8000
      VITE_KEYCLOAK_URL: http://keycloak:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0
    logging: *default-logging

volumes:
  postgres_data:
  redis_data:
  keycloak_data:
  pgadmin_data:
  prometheus_data:
  grafana_data:
  backend_cache:

networks:
  default:
    name: itdo_network
    driver: bridge