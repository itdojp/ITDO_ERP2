{
  "analysis_timestamp": "2025-07-23T15:26:24.208784",
  "project_root": "/home/work/ITDO_ERP2",
  "model_analysis": {
    "total_models": 166,
    "relationships": {
      "ProjectExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "project_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "sponsor",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tasks",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "resources",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "time_entries",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "risks",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "milestones",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "deliverables",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        },
        {
          "name": "issues",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "project",
          "cascade": null
        }
      ],
      "TaskExtended": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "tasks",
          "cascade": null
        },
        {
          "name": "parent_task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "subtasks",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "parent_task",
          "cascade": null
        },
        {
          "name": "assigned_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assigned_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reviewer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "dependencies",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        },
        {
          "name": "dependents",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "dependent_task",
          "cascade": null
        },
        {
          "name": "time_entries",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        },
        {
          "name": "comments",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        }
      ],
      "TaskDependencyExtended": [
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "dependencies",
          "cascade": null
        },
        {
          "name": "dependent_task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "dependents",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectResource": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "resources",
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "TimeEntry": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "time_entries",
          "cascade": null
        },
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "time_entries",
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectRisk": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "risks",
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectMilestoneExtended": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "milestones",
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectDeliverable": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "deliverables",
          "cascade": null
        },
        {
          "name": "milestone",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "responsible_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reviewer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectIssue": [
        {
          "name": "project",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "issues",
          "cascade": null
        },
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reporter",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assigned_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "TaskComment": [
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "comments",
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectTemplate": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ProjectPortfolio": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "portfolio_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsDataSource": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "metrics",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "data_source",
          "cascade": null
        }
      ],
      "AnalyticsMetric": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "data_source",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "metrics",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "data_points",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "metric",
          "cascade": null
        },
        {
          "name": "alerts",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "metric",
          "cascade": null
        }
      ],
      "AnalyticsDataPoint": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "metric",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "data_points",
          "cascade": null
        }
      ],
      "AnalyticsDashboard": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsReport": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "executions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "report",
          "cascade": null
        }
      ],
      "AnalyticsReportExecution": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "report",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "executions",
          "cascade": null
        },
        {
          "name": "triggered_by_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsAlert": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "metric",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "alerts",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "resolver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsPrediction": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "metric",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsInsight": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "dismissed_by_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AnalyticsAuditLog": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowDefinition": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "previous_version",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "instances",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "definition",
          "cascade": null
        },
        {
          "name": "steps",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "definition",
          "cascade": null
        }
      ],
      "WorkflowStep": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "definition",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "steps",
          "cascade": null
        },
        {
          "name": "parent_step",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tasks",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "step",
          "cascade": null
        }
      ],
      "WorkflowInstance": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "definition",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "instances",
          "cascade": null
        },
        {
          "name": "current_step",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "current_assignee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "initiator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "completer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "canceller",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tasks",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "instance",
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "instance",
          "cascade": null
        }
      ],
      "WorkflowTask": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "instance",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "tasks",
          "cascade": null
        },
        {
          "name": "step",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "tasks",
          "cascade": null
        },
        {
          "name": "assignee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assigner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "original_assignee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        },
        {
          "name": "comments",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        },
        {
          "name": "attachments",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "task",
          "cascade": null
        }
      ],
      "WorkflowActivity": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "instance",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "performer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "on_behalf_of",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "from_assignee_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "to_assignee_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowComment": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "comments",
          "cascade": null
        },
        {
          "name": "parent_comment",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "author",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "deleter",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowAttachment": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "task",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "attachments",
          "cascade": null
        },
        {
          "name": "uploader",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "deleter",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "previous_version",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowTemplate": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowAnalytics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "definition",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "most_productive_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WorkflowAuditLog": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "CustomerExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "account_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "customer_success_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "sales_rep",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "contacts",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "customer",
          "cascade": null
        },
        {
          "name": "leads",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "customer",
          "cascade": null
        },
        {
          "name": "opportunities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "customer",
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "customer",
          "cascade": null
        },
        {
          "name": "support_tickets",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "customer",
          "cascade": null
        }
      ],
      "ContactExtended": [
        {
          "name": "customer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "contacts",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "contact",
          "cascade": null
        }
      ],
      "LeadExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "customer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "leads",
          "cascade": null
        },
        {
          "name": "assigned_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "campaign",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "lead",
          "cascade": null
        }
      ],
      "OpportunityExtended": [
        {
          "name": "customer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "opportunities",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "lead",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "sales_rep",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "sales_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "sales_engineer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "opportunity",
          "cascade": null
        }
      ],
      "CRMActivity": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "customer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "contact",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "lead",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "opportunity",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assigned_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "CampaignExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "campaign_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "leads",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "campaign",
          "cascade": null
        }
      ],
      "SupportTicket": [
        {
          "name": "customer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "support_tickets",
          "cascade": null
        },
        {
          "name": "contact",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assigned_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "escalated_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "CRMAnalytics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "calculator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditLogEntry": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "impersonated_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "acknowledger",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditRule": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditAlert": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "rule",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assignee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "acknowledger",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "resolver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditReport": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "generator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditSession": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditDataRetention": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditCompliance": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "assessor",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reviewer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "remediation_owner_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditConfiguration": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "modifier",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditMetrics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "recipient_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "template",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "deliveries",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "notification",
          "cascade": null
        },
        {
          "name": "interactions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "notification",
          "cascade": null
        }
      ],
      "NotificationTemplate": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "notifications",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "template",
          "cascade": null
        }
      ],
      "NotificationDelivery": [
        {
          "name": "notification",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "deliveries",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationPreference": [
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationSubscription": [
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationInteraction": [
        {
          "name": "notification",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "interactions",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationEvent": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationRule": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "template",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationQueue": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "notification",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "NotificationAnalytics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "calculator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "ExternalSystem": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "connectors",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "external_system",
          "cascade": null
        }
      ],
      "IntegrationConnector": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "external_system",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "connectors",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "executions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "connector",
          "cascade": null
        },
        {
          "name": "transformations",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "connector",
          "cascade": null
        }
      ],
      "DataMapping": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DataTransformation": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "connector",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "transformations",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "IntegrationExecution": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "connector",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "executions",
          "cascade": null
        },
        {
          "name": "triggered_by_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "WebhookEndpoint": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "requests",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "webhook_endpoint",
          "cascade": null
        }
      ],
      "WebhookRequest": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "webhook_endpoint",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "requests",
          "cascade": null
        }
      ],
      "IntegrationMessage": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "IntegrationAuditLog": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "Department": [
        {
          "name": "users",
          "type": "relationship",
          "lazy_loading": "dynamic",
          "back_populates": null,
          "cascade": null
        }
      ],
      "AuditLog": [
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "joined",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "Project": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "department",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "Account": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "parent_account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "child_accounts",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "journal_entries",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "account",
          "cascade": null
        }
      ],
      "JournalEntry": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "period",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reversal_entry",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "lines",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "journal_entry",
          "cascade": "all, delete-orphan"
        }
      ],
      "JournalEntryLine": [
        {
          "name": "journal_entry",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "lines",
          "cascade": null
        },
        {
          "name": "account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "journal_entries",
          "cascade": null
        },
        {
          "name": "cost_center",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "FinancialPeriod": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "closer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "journal_entries",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "period",
          "cascade": null
        },
        {
          "name": "budgets",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "period",
          "cascade": null
        }
      ],
      "Budget": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "period",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "budgets",
          "cascade": null
        },
        {
          "name": "submitter",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "budget_lines",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "budget",
          "cascade": "all, delete-orphan"
        }
      ],
      "BudgetLine": [
        {
          "name": "budget",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "budget_lines",
          "cascade": null
        },
        {
          "name": "account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "cost_center",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "CostCenter": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "parent_cost_center",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "child_cost_centers",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "journal_entry_lines",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "cost_center",
          "cascade": null
        },
        {
          "name": "budget_lines",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "cost_center",
          "cascade": null
        }
      ],
      "FinancialReport": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "last_generator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "TaxConfiguration": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tax_payable_account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tax_receivable_account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "tax_expense_account",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "FinanceAuditLog": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentExtended": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "locked_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "current_approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "parent_document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "folder",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "documents",
          "cascade": null
        },
        {
          "name": "approval_workflow",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "versions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "shares",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "document",
          "cascade": null
        },
        {
          "name": "comments",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "document",
          "cascade": null
        },
        {
          "name": "approvals",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "document",
          "cascade": null
        },
        {
          "name": "signatures",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "document",
          "cascade": null
        },
        {
          "name": "activities",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "document",
          "cascade": null
        }
      ],
      "DocumentFolder": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "parent_folder",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "subfolders",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "documents",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "folder",
          "cascade": null
        },
        {
          "name": "permissions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "folder",
          "cascade": null
        }
      ],
      "DocumentShare": [
        {
          "name": "document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "shares",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "shared_with_user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "shared_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "revoked_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentComment": [
        {
          "name": "document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "comments",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "author",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "resolved_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "parent_comment",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "replies",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentApproval": [
        {
          "name": "document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "approvals",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "delegated_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "requested_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "workflow",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentSignature": [
        {
          "name": "document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "signatures",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "signer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "requested_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentWorkflow": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "document_approvals",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "workflow",
          "cascade": null
        }
      ],
      "DocumentActivity": [
        {
          "name": "document",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "activities",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentTemplate": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "owner",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentFolderPermission": [
        {
          "name": "folder",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "permissions",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "granted_by",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "DocumentAnalytics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "calculator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "Employee": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "user",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "department",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "direct_reports",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "manager",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "updater",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "payroll_records",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        },
        {
          "name": "leave_requests",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        },
        {
          "name": "performance_reviews",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        },
        {
          "name": "training_records",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        },
        {
          "name": "benefits",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        },
        {
          "name": "onboarding_records",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "employee",
          "cascade": null
        }
      ],
      "Position": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "department",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reports_to",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "subordinate_positions",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "reports_to",
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "PayrollRecord": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "payroll_records",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "processor",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "LeaveRequest": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "leave_requests",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "PerformanceReview": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "performance_reviews",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "reviewer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "second_reviewer",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "hr_approver",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "TrainingRecord": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "training_records",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "EmployeeBenefit": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "benefits",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "JobPosting": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "position",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "hiring_manager",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "recruiter",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "creator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "OnboardingRecord": [
        {
          "name": "employee",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": "onboarding_records",
          "cascade": null
        },
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "buddy",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "mentor",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "hr_coordinator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ],
      "HRAnalytics": [
        {
          "name": "organization",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        },
        {
          "name": "calculator",
          "type": "relationship",
          "lazy_loading": "select",
          "back_populates": null,
          "cascade": null
        }
      ]
    },
    "indexes": {
      "Permission": [
        {
          "name": "ix_permissions_category_active",
          "columns": [
            "category",
            "is_active"
          ],
          "unique": false
        }
      ],
      "RolePermission": [
        {
          "name": "ix_role_permissions_role_id",
          "columns": [
            "role_id"
          ],
          "unique": false
        },
        {
          "name": "ix_role_permissions_permission_id",
          "columns": [
            "permission_id"
          ],
          "unique": false
        }
      ]
    },
    "constraints": {},
    "potential_issues": [
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Expense",
        "file": "/home/work/ITDO_ERP2/backend/app/models/expense.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'projects.id', 'expense_categories.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Expense",
        "file": "/home/work/ITDO_ERP2/backend/app/models/expense.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ExpenseApprovalFlow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/expense.py",
        "description": "Foreign keys detected but insufficient indexes: ['expenses.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ExpenseApprovalFlow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/expense.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProductCategory",
        "file": "/home/work/ITDO_ERP2/backend/app/models/product.py",
        "description": "Foreign keys detected but insufficient indexes: ['product_categories.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CrossTenantPermissionRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/cross_tenant_permissions.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CrossTenantAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/cross_tenant_permissions.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'organizations.id', 'organizations.id', 'cross_tenant_permission_rules.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'customers.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TaskExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'tasks_extended.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TaskExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TaskExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TaskDependencyExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['tasks_extended.id', 'tasks_extended.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TaskDependencyExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TaskDependencyExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectResource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectResource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectResource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TimeEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'tasks_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TimeEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TimeEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectRisk",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectRisk",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectRisk",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectMilestoneExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectMilestoneExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectMilestoneExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectDeliverable",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'project_milestones_extended.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectDeliverable",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectDeliverable",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectIssue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects_extended.id', 'tasks_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectIssue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectIssue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TaskComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['tasks_extended.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TaskComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TaskComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectPortfolio",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ProjectPortfolio",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectPortfolio",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsDataSource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsDataSource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsDataSource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsMetric",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'analytics_data_sources.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsMetric",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsMetric",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsDataPoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'analytics_metrics.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsDataPoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsDataPoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsDashboard",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsDashboard",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsDashboard",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsReportExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'analytics_reports.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsReportExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsReportExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'analytics_metrics.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsPrediction",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'analytics_metrics.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsPrediction",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsPrediction",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsInsight",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AnalyticsInsight",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsInsight",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AnalyticsAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AnalyticsAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowDefinition",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_definitions.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowDefinition",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowDefinition",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowStep",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_definitions.id', 'workflow_steps.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowStep",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowStep",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowInstance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_definitions.id', 'workflow_steps.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowInstance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowInstance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowTask",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_instances_extended.id', 'workflow_steps.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowTask",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowTask",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_instances_extended.id', 'workflow_tasks_extended.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_tasks_extended.id', 'workflow_comments.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowAttachment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_tasks_extended.id', 'workflow_attachments.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowAttachment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowAttachment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WorkflowTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'workflow_definitions.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectMilestone",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_milestone.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectMilestone",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_milestone.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Report",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Report",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ReportWidget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['reports.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ReportWidget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Dashboard",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Dashboard",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DashboardWidget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['dashboards.id', 'reports.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DashboardWidget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ReportExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['reports.id', 'users.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ReportExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ReportSchedule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['reports.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ReportSchedule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Chart",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['reports.id', 'dashboards.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Chart",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DataSource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DataSource",
        "file": "/home/work/ITDO_ERP2/backend/app/models/analytics.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CustomerExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "CustomerExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "CustomerExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ContactExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers_extended.id', 'organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ContactExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ContactExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "LeadExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'customers_extended.id', 'users.id', 'campaigns_extended.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "LeadExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "LeadExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "OpportunityExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers_extended.id', 'organizations.id', 'leads_extended.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "OpportunityExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "OpportunityExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CRMActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'customers_extended.id', 'contacts_extended.id', 'leads_extended.id', 'opportunities_extended.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "CRMActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "CRMActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CampaignExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "CampaignExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "CampaignExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "SupportTicket",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers_extended.id', 'contacts_extended.id', 'organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "SupportTicket",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "SupportTicket",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CRMAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "CRMAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/crm_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "RoleInheritanceRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/permission_inheritance.py",
        "description": "Foreign keys detected but insufficient indexes: ['roles.id', 'roles.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditLogEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditLogEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditLogEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'audit_rules.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditAlert",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditSession",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditSession",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditDataRetention",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditDataRetention",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditDataRetention",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditCompliance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditCompliance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditCompliance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "AuditConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditMetrics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditMetrics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/audit_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'notification_templates.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationDelivery",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['notifications_extended.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationDelivery",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationDelivery",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationPreference",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationPreference",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationSubscription",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationSubscription",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationSubscription",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationInteraction",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['notifications_extended.id', 'organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationInteraction",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationEvent",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationEvent",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'notification_templates.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationRule",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationQueue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'notifications_extended.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "NotificationQueue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationQueue",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "NotificationAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "NotificationAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/notification_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ExternalSystem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "ExternalSystem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ExternalSystem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "IntegrationConnector",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'external_systems.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "IntegrationConnector",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "IntegrationConnector",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DataMapping",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'integration_connectors.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DataMapping",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DataMapping",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DataTransformation",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'integration_connectors.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DataTransformation",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DataTransformation",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "IntegrationExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'integration_connectors.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "IntegrationExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "IntegrationExecution",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WebhookEndpoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WebhookEndpoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WebhookEndpoint",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WebhookRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'webhook_endpoints.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "WebhookRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WebhookRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "IntegrationMessage",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "IntegrationMessage",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "IntegrationAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "IntegrationAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/integration_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Customer",
        "file": "/home/work/ITDO_ERP2/backend/app/models/customer.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CustomerContact",
        "file": "/home/work/ITDO_ERP2/backend/app/models/customer.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Opportunity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/customer.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CustomerActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/customer.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers.id', 'opportunities.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Workflow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Workflow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowNode",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['workflows.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowNode",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowConnection",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['workflows.id', 'workflow_nodes.id', 'workflow_nodes.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowConnection",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowInstance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['workflows.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowInstance",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "WorkflowTask",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['workflow_instances.id', 'workflow_nodes.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "WorkflowTask",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Application",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'departments.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Application",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ApplicationApproval",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Foreign keys detected but insufficient indexes: ['applications.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ApplicationApproval",
        "file": "/home/work/ITDO_ERP2/backend/app/models/workflow.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "UserOrganization",
        "file": "/home/work/ITDO_ERP2/backend/app/models/user_organization.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'organizations.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "OrganizationInvitation",
        "file": "/home/work/ITDO_ERP2/backend/app/models/user_organization.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "UserTransferRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/user_organization.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'organizations.id', 'organizations.id', 'users.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ProjectMember",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_member.py",
        "description": "Foreign keys detected but insufficient indexes: ['projects.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "ProjectMember",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project_member.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "SalesOrder",
        "file": "/home/work/ITDO_ERP2/backend/app/models/sales.py",
        "description": "Foreign keys detected but insufficient indexes: ['customers.id', 'organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "SalesOrderItem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/sales.py",
        "description": "Foreign keys detected but insufficient indexes: ['sales_orders.id', 'products.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TaskDependency",
        "file": "/home/work/ITDO_ERP2/backend/app/models/task.py",
        "description": "Foreign keys detected but insufficient indexes: ['tasks.id', 'tasks.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "InventoryItem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/inventory.py",
        "description": "Foreign keys detected but insufficient indexes: ['products.id', 'warehouses.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "StockMovement",
        "file": "/home/work/ITDO_ERP2/backend/app/models/inventory.py",
        "description": "Foreign keys detected but insufficient indexes: ['inventory_items.id', 'products.id', 'warehouses.id', 'organizations.id', 'users.id', 'stock_movements.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Budget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/budget.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'projects.id', 'departments.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "BudgetItem",
        "file": "/home/work/ITDO_ERP2/backend/app/models/budget.py",
        "description": "Foreign keys detected but insufficient indexes: ['budgets.id', 'expense_categories.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Base",
        "file": "/home/work/ITDO_ERP2/backend/app/models/base.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "AuditableModel",
        "file": "/home/work/ITDO_ERP2/backend/app/models/base.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "AuditableModel",
        "file": "/home/work/ITDO_ERP2/backend/app/models/base.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "SoftDeletableModel",
        "file": "/home/work/ITDO_ERP2/backend/app/models/base.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Project",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'departments.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Project",
        "file": "/home/work/ITDO_ERP2/backend/app/models/project.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Product",
        "file": "/home/work/ITDO_ERP2/backend/app/models/product_simple.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations_simple.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Account",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'finance_accounts.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "Account",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Account",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "JournalEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'finance_periods.id', 'finance_journal_entries.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "JournalEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "JournalEntry",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "JournalEntryLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['finance_journal_entries.id', 'finance_accounts.id', 'departments.id', 'finance_cost_centers.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "JournalEntryLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "JournalEntryLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "FinancialPeriod",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "FinancialPeriod",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Budget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'finance_periods.id', 'users.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "Budget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Budget",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "BudgetLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['finance_budgets.id', 'finance_accounts.id', 'departments.id', 'finance_cost_centers.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "BudgetLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "BudgetLine",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "CostCenter",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'finance_cost_centers.id', 'users.id', 'departments.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "CostCenter",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "CostCenter",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "FinancialReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "FinancialReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "FinancialReport",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TaxConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'finance_accounts.id', 'finance_accounts.id', 'finance_accounts.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TaxConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TaxConfiguration",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "FinanceAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "FinanceAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "FinanceAuditLog",
        "file": "/home/work/ITDO_ERP2/backend/app/models/finance_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'documents_extended.id', 'users.id', 'users.id', 'users.id', 'document_folders.id', 'document_workflows.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentExtended",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentFolder",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'document_folders.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentFolder",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentFolder",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentShare",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['documents_extended.id', 'organizations.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentShare",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentShare",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['documents_extended.id', 'organizations.id', 'document_comments.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentComment",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentApproval",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['documents_extended.id', 'organizations.id', 'document_workflows.id', 'users.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentApproval",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentApproval",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentSignature",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['documents_extended.id', 'organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentSignature",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentSignature",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentWorkflow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentWorkflow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentWorkflow",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['documents_extended.id', 'organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentActivity",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "DocumentTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentTemplate",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentFolderPermission",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['document_folders.id', 'organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentFolderPermission",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "DocumentAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "DocumentAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/document_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "ExpenseCategory",
        "file": "/home/work/ITDO_ERP2/backend/app/models/expense_category.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'expense_categories.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Employee",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id', 'departments.id', 'hr_employees.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "Employee",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Employee",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "Position",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'departments.id', 'hr_positions.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "Position",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "Position",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "PayrollRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "PayrollRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "PayrollRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "LeaveRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id', 'hr_employees.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "LeaveRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "LeaveRequest",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "PerformanceReview",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id', 'hr_employees.id', 'hr_employees.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "PerformanceReview",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "PerformanceReview",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "TrainingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "TrainingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "TrainingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "EmployeeBenefit",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "EmployeeBenefit",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "EmployeeBenefit",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "JobPosting",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'hr_positions.id', 'hr_employees.id', 'hr_employees.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "JobPosting",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "JobPosting",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "OnboardingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['hr_employees.id', 'organizations.id', 'hr_employees.id', 'hr_employees.id', 'hr_employees.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "unlimited_text",
        "severity": "low",
        "model": "OnboardingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Text columns without length limits detected",
        "suggestion": "Consider adding length limits to Text columns for better performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "OnboardingRecord",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "HRAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Foreign keys detected but insufficient indexes: ['organizations.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_repr",
        "severity": "low",
        "model": "HRAnalytics",
        "file": "/home/work/ITDO_ERP2/backend/app/models/hr_extended.py",
        "description": "Missing __repr__ method",
        "suggestion": "Add __repr__ method for better debugging experience"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "UserRole",
        "file": "/home/work/ITDO_ERP2/backend/app/models/role.py",
        "description": "Foreign keys detected but insufficient indexes: ['users.id', 'roles.id', 'organizations.id', 'departments.id', 'users.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      },
      {
        "type": "missing_index",
        "severity": "medium",
        "model": "RolePermission",
        "file": "/home/work/ITDO_ERP2/backend/app/models/role.py",
        "description": "Foreign keys detected but insufficient indexes: ['roles.id', 'permissions.id', 'users.id']",
        "suggestion": "Add indexes to foreign key columns for better join performance"
      }
    ]
  },
  "query_analysis": {
    "total_query_locations": 399,
    "anti_patterns": {
      "no_limit": [
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 454,
          "code": "templates = query.offset(skip).limit(limit).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 562,
          "code": ").all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 810,
          "code": "events = query.order_by(NotificationEvent.created_at.desc()).offset(skip).limit(limit).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 976,
          "code": ").order_by(NotificationInteraction.timestamp.desc()).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 703,
          "code": ").all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 806,
          "code": "issues = query.offset(skip).limit(limit).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 989,
          "code": "templates = query.offset(skip).limit(limit).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/user_privacy.py",
          "line": 244,
          "code": "users = db.query(User).filter(User.full_name.ilike(f\"%{name}%\")).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_extended.py",
          "line": 629,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 185,
          "code": "return query.order_by(desc(NotificationExtended.created_at)).offset(skip).limit(limit).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 570,
          "code": "return query.order_by(NotificationSubscription.created_at).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 649,
          "code": ").all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 902,
          "code": ").order_by(NotificationQueue.priority.desc(), NotificationQueue.created_at).limit(batch_size).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 137,
          "code": "systems = query.offset((page - 1) * per_page).limit(per_page).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 648,
          "code": ").order_by(IntegrationMessage.priority.desc(), IntegrationMessage.created_at).limit(limit).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 127,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 261,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 392,
          "code": "return query.options(joinedload(ProjectResource.user)).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 504,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 566,
          "code": "return query.options(joinedload(ProjectRisk.owner)).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 618,
          "code": "return query.options(joinedload(ProjectPortfolio.portfolio_manager)).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 691,
          "code": ").group_by(ProjectExtended.status).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 126,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 149,
          "code": "return query.all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 157,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 344,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 378,
          "code": "records = query.all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 407,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 495,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 620,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 747,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 851,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 913,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 925,
          "code": "training_records = query.all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 963,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1042,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1054,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1066,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 128,
          "code": "return query.order_by(Account.account_code).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 136,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 349,
          "code": "return query.order_by(JournalEntry.transaction_date).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 895,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 127,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 352,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 484,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 671,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 755,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 827,
          "code": "return query.offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 936,
          "code": ").offset(skip).limit(limit).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 137,
          "code": "customers = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 344,
          "code": "orders = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 460,
          "code": ").order_by(SalesOrderItem.line_number).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 205,
          "code": "entries = query.offset(offset).limit(per_page).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 294,
          "code": "rules = query.order_by(desc(AuditRule.created_at)).offset(offset).limit(per_page).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 372,
          "code": "alerts = query.order_by(desc(AuditAlert.created_at)).offset(offset).limit(per_page).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 452,
          "code": "reports = query.order_by(desc(AuditReport.created_at)).offset(offset).limit(per_page).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 662,
          "code": "resolved_alerts = alerts_query.filter(AuditAlert.resolved_at.isnot(None)).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 908,
          "code": ").all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 420,
          "code": ").order_by(desc(AnalyticsDataPoint.timestamp)).limit(period_count).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 956,
          "code": ").all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1010,
          "code": "metrics = query.all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 193,
          "code": "return query.order_by(desc(DocumentExtended.updated_at)).offset(skip).limit(limit).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 375,
          "code": ").order_by(DocumentFolder.name).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 382,
          "code": ").order_by(DocumentExtended.title).all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 499,
          "code": "return query.all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 724,
          "code": ").all()",
          "match": ".all()\n            "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 747,
          "code": ").all()",
          "match": ".all()\n            "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1037,
          "code": "return query.offset(skip).limit(limit).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 41,
          "code": "return db.query(self.model).offset(skip).limit(limit).all()",
          "match": ".all()\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 93,
          "code": ".all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 115,
          "code": "organizations = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 187,
          "code": ").all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 211,
          "code": ").order_by(Organization.name).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 135,
          "code": "definitions = query.offset((page - 1) * per_page).limit(per_page).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 291,
          "code": "instances = query.order_by(desc(WorkflowInstance.created_at)).offset((page - 1) * per_page).limit(per_page).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 590,
          "code": "instances = instances_query.all()",
          "match": ".all()\n            "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 633,
          "code": "tasks = tasks_query.all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 685,
          "code": ").all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 701,
          "code": ").group_by(WorkflowTask.step_id).order_by(desc('avg_duration')).limit(5).all()",
          "match": ".all()\n        "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 108,
          "code": "users = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 147,
          "code": "products = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 240,
          "code": ").all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 249,
          "code": ").all()",
          "match": ".all()"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 257,
          "code": ").all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 323,
          "code": "return query.order_by(ProductCategory.sort_order, ProductCategory.name).all()",
          "match": ".all()\n\n"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 105,
          "code": "warehouses = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 238,
          "code": "items = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 371,
          "code": "movements = query.offset(skip).limit(limit).all()",
          "match": ".all()\n    "
        }
      ],
      "missing_eager_loading": [
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 441,
          "code": "query = db.query(NotificationTemplate).filter(",
          "match": ".query(NotificationTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 477,
          "code": "template = db.query(NotificationTemplate).filter(",
          "match": ".query(NotificationTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 560,
          "code": "deliveries = db.query(NotificationDelivery).filter(",
          "match": ".query(NotificationDelivery)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 801,
          "code": "query = db.query(NotificationEvent).filter(",
          "match": ".query(NotificationEvent)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/notification_v31.py",
          "line": 974,
          "code": "interactions = db.query(NotificationInteraction).filter(",
          "match": ".query(NotificationInteraction)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/organizations_simple.py",
          "line": 16,
          "code": "if db.query(Organization).filter(Organization.code == org.code).first():  # type: ignore[misc]",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/organizations_simple.py",
          "line": 33,
          "code": "orgs = db.query(Organization).filter(Organization.is_active == True).offset(skip).limit(limit).all()  # type: ignore[misc]",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/organizations_simple.py",
          "line": 39,
          "code": "org = db.query(Organization).filter(Organization.id == org_id).first()  # type: ignore[misc]",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/organizations_simple.py",
          "line": 47,
          "code": "org = db.query(Organization).filter(Organization.id == org_id).first()  # type: ignore[misc]",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/organizations_simple.py",
          "line": 64,
          "code": "org = db.query(Organization).filter(Organization.id == org_id).first()  # type: ignore[misc]",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 534,
          "code": "entry = db.query(TimeEntry).filter(TimeEntry.id == entry_id).first()",
          "match": ".query(TimeEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 639,
          "code": "risk = db.query(ProjectRisk).filter(ProjectRisk.id == risk_id).first()",
          "match": ".query(ProjectRisk)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 701,
          "code": "milestones = db.query(ProjectMilestoneExtended).filter(",
          "match": ".query(ProjectMilestoneExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 750,
          "code": "milestone = db.query(ProjectMilestoneExtended).filter(",
          "match": ".query(ProjectMilestoneExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 795,
          "code": "query = db.query(ProjectIssue).filter(ProjectIssue.project_id == project_id)",
          "match": ".query(ProjectIssue)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 825,
          "code": "project = db.query(ProjectExtended).filter(ProjectExtended.id == project_id).first()",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 838,
          "code": "count = db.query(ProjectIssue).filter(ProjectIssue.project_id == project_id).count()",
          "match": ".query(ProjectIssue)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 864,
          "code": "issue = db.query(ProjectIssue).filter(ProjectIssue.id == issue_id).first()",
          "match": ".query(ProjectIssue)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 937,
          "code": "portfolio = db.query(ProjectPortfolio).filter(ProjectPortfolio.id == portfolio_id).first()",
          "match": ".query(ProjectPortfolio)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 978,
          "code": "query = db.query(ProjectTemplate).filter(",
          "match": ".query(ProjectTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/project_v31.py",
          "line": 1031,
          "code": "template = db.query(ProjectTemplate).filter(ProjectTemplate.id == template_id).first()",
          "match": ".query(ProjectTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 16,
          "code": "if db.query(Product).filter(Product.code == product.code).first():  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 45,
          "code": "query = db.query(Product).filter(Product.is_active == True)  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 65,
          "code": "product = db.query(Product).filter(Product.id == product_id).first()  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 73,
          "code": "product = db.query(Product).filter(Product.id == product_id).first()  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 90,
          "code": "product = db.query(Product).filter(Product.id == product_id).first()  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 115,
          "code": "product = db.query(Product).filter(Product.id == product_id).first()  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 135,
          "code": "product = db.query(Product).filter(Product.id == product_id).first()  # type: ignore[misc]",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/products_simple.py",
          "line": 147,
          "code": "categories = db.query(Product.category).distinct().filter(Product.category.isnot(None)).all()  # type: ignore[misc]",
          "match": ".query(Product.category)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/user_privacy.py",
          "line": 187,
          "code": "target_user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/user_privacy.py",
          "line": 221,
          "code": "target_user = db.query(User).filter(User.email == email).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/user_privacy.py",
          "line": 244,
          "code": "users = db.query(User).filter(User.full_name.ilike(f\"%{name}%\")).all()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/roles.py",
          "line": 481,
          "code": "user = db.query(User).filter(User.id == assignment.user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/roles.py",
          "line": 586,
          "code": "user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 16,
          "code": "if db.query(User).filter(User.email == user.email).first():  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 19,
          "code": "if db.query(User).filter(User.username == user.username).first():  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 37,
          "code": "users = db.query(User).offset(skip).limit(limit).all()  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 43,
          "code": "user = db.query(User).filter(User.id == user_id).first()  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 51,
          "code": "user = db.query(User).filter(User.id == user_id).first()  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_simple.py",
          "line": 68,
          "code": "user = db.query(User).filter(User.id == user_id).first()  # type: ignore[misc]",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_extended.py",
          "line": 342,
          "code": "role = db.query(Role).filter(Role.id == assignment.role_id).first()",
          "match": ".query(Role)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_extended.py",
          "line": 614,
          "code": "user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/users_extended.py",
          "line": 625,
          "code": "db.query(UserActivityLog)",
          "match": ".query(UserActivityLog)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/permissions.py",
          "line": 65,
          "code": "target_user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/permissions.py",
          "line": 135,
          "code": "target_user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/permissions.py",
          "line": 205,
          "code": "target_user = db.query(User).filter(User.id == user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/inventory_basic.py",
          "line": 327,
          "code": "product = db.query(Product).filter(Product.id == item.product_id).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/inventory_basic.py",
          "line": 368,
          "code": "product = db.query(Product).filter(Product.id == item.product_id).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/inventory_basic.py",
          "line": 414,
          "code": "product = db.query(Product).filter(Product.id == item.product_id).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/api/v1/inventory_basic.py",
          "line": 455,
          "code": "product = db.query(Product).filter(Product.id == item.product_id).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 129,
          "code": "return db.query(NotificationExtended).options(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 154,
          "code": "query = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 195,
          "code": "notification = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 225,
          "code": "notification = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 299,
          "code": "template = db.query(NotificationTemplate).filter(",
          "match": ".query(NotificationTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 400,
          "code": "delivery = db.query(NotificationDelivery).filter(",
          "match": ".query(NotificationDelivery)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 441,
          "code": "preferences = db.query(NotificationPreference).filter(",
          "match": ".query(NotificationPreference)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 562,
          "code": "query = db.query(NotificationSubscription).filter(",
          "match": ".query(NotificationSubscription)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 580,
          "code": "subscription = db.query(NotificationSubscription).filter(",
          "match": ".query(NotificationSubscription)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 646,
          "code": "rules = db.query(NotificationRule).filter(",
          "match": ".query(NotificationRule)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 782,
          "code": "total_notifications = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 788,
          "code": "notifications_sent = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 795,
          "code": "notifications_read = db.query(NotificationExtended).filter(",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 803,
          "code": "email_deliveries = db.query(NotificationDelivery).filter(",
          "match": ".query(NotificationDelivery)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 828,
          "code": "total_views = db.query(func.sum(NotificationExtended.view_count)).filter(",
          "match": ".query(func.sum(NotificationExtended.view_count)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 834,
          "code": "total_clicks = db.query(func.sum(NotificationExtended.click_count)).filter(",
          "match": ".query(func.sum(NotificationExtended.click_count)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 898,
          "code": "queue_items = db.query(NotificationQueue).filter(",
          "match": ".query(NotificationQueue)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 1053,
          "code": "total_notifications = db.query(NotificationExtended).count()",
          "match": ".query(NotificationExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/notification_v31.py",
          "line": 1054,
          "code": "pending_queue = db.query(NotificationQueue).filter(",
          "match": ".query(NotificationQueue)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 65,
          "code": "existing = db.query(ExternalSystem).filter(",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 104,
          "code": "system = db.query(ExternalSystem).filter(ExternalSystem.id == system_id).first()",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 123,
          "code": "query = db.query(ExternalSystem).filter(ExternalSystem.organization_id == organization_id)",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 154,
          "code": "system = db.query(ExternalSystem).filter(ExternalSystem.id == system_id).first()",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 189,
          "code": "system = db.query(ExternalSystem).filter(ExternalSystem.id == system_id).first()",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 265,
          "code": "external_system = db.query(ExternalSystem).filter(",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 303,
          "code": "connector = db.query(IntegrationConnector).options(",
          "match": ".query(IntegrationConnector)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 430,
          "code": "transformation = db.query(DataTransformation).filter(",
          "match": ".query(DataTransformation)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 524,
          "code": "webhook = db.query(WebhookEndpoint).filter(",
          "match": ".query(WebhookEndpoint)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 640,
          "code": "messages = db.query(IntegrationMessage).filter(",
          "match": ".query(IntegrationMessage)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 715,
          "code": "systems_query = db.query(ExternalSystem).filter(",
          "match": ".query(ExternalSystem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 725,
          "code": "connectors_query = db.query(IntegrationConnector).filter(",
          "match": ".query(IntegrationConnector)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 733,
          "code": "recent_executions = db.query(IntegrationExecution).filter(",
          "match": ".query(IntegrationExecution)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 747,
          "code": "avg_response_time = db.query(func.avg(ExternalSystem.average_response_time)).filter(",
          "match": ".query(func.avg(ExternalSystem.average_response_time)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 753,
          "code": "pending_messages = db.query(IntegrationMessage).filter(",
          "match": ".query(IntegrationMessage)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/integration_v31.py",
          "line": 758,
          "code": "failed_messages = db.query(IntegrationMessage).filter(",
          "match": ".query(IntegrationMessage)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 56,
          "code": "manager = db.query(User).filter(User.id == project_data.project_manager_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 64,
          "code": "count = db.query(ProjectExtended).filter(",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 87,
          "code": "return db.query(ProjectExtended).options(",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 104,
          "code": "query = db.query(ProjectExtended)",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 132,
          "code": "project = db.query(ProjectExtended).filter(ProjectExtended.id == project_id).first()",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 166,
          "code": "project = db.query(ProjectExtended).filter(ProjectExtended.id == project_id).first()",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 185,
          "code": "project = db.query(ProjectExtended).filter(",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 193,
          "code": "count = db.query(TaskExtended).filter(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 200,
          "code": "parent = db.query(TaskExtended).filter(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 222,
          "code": "return db.query(TaskExtended).options(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 238,
          "code": "query = db.query(TaskExtended)",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 266,
          "code": "task = db.query(TaskExtended).filter(TaskExtended.id == task_id).first()",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 303,
          "code": "task = db.query(TaskExtended).filter(TaskExtended.id == dependency_data.task_id).first()",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 304,
          "code": "dependent_task = db.query(TaskExtended).filter(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 328,
          "code": "existing_deps = db.query(TaskDependencyExtended).filter(",
          "match": ".query(TaskDependencyExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 343,
          "code": "project = db.query(ProjectExtended).filter(",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 351,
          "code": "user = db.query(User).filter(User.id == resource_data.user_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 357,
          "code": "overlapping = db.query(ProjectResource).filter(",
          "match": ".query(ProjectResource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 387,
          "code": "query = db.query(ProjectResource).filter(ProjectResource.project_id == project_id)",
          "match": ".query(ProjectResource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 401,
          "code": "resource = db.query(ProjectResource).filter(ProjectResource.id == resource_id).first()",
          "match": ".query(ProjectResource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 425,
          "code": "project = db.query(ProjectExtended).filter(",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 433,
          "code": "task = db.query(TaskExtended).filter(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 463,
          "code": "total_hours = db.query(func.sum(TimeEntry.hours)).filter(",
          "match": ".query(func.sum(TimeEntry.hours)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 467,
          "code": "task = db.query(TaskExtended).filter(TaskExtended.id == task_id).first()",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 482,
          "code": "query = db.query(TimeEntry)",
          "match": ".query(TimeEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 509,
          "code": "entry = db.query(TimeEntry).filter(TimeEntry.id == entry_id).first()",
          "match": ".query(TimeEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 561,
          "code": "query = db.query(ProjectRisk).filter(ProjectRisk.project_id == project_id)",
          "match": ".query(ProjectRisk)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 571,
          "code": "risk = db.query(ProjectRisk).filter(ProjectRisk.id == risk_id).first()",
          "match": ".query(ProjectRisk)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 611,
          "code": "query = db.query(ProjectPortfolio).filter(",
          "match": ".query(ProjectPortfolio)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 627,
          "code": "project = db.query(ProjectExtended).filter(ProjectExtended.id == project_id).first()",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 632,
          "code": "total_tasks = db.query(TaskExtended).filter(TaskExtended.project_id == project_id).count()",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 633,
          "code": "completed_tasks = db.query(TaskExtended).filter(",
          "match": ".query(TaskExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 639,
          "code": "total_logged_hours = db.query(func.sum(TimeEntry.hours)).filter(",
          "match": ".query(func.sum(TimeEntry.hours)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 643,
          "code": "billable_hours = db.query(func.sum(TimeEntry.hours)).filter(",
          "match": ".query(func.sum(TimeEntry.hours)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 649,
          "code": "high_risks = db.query(ProjectRisk).filter(",
          "match": ".query(ProjectRisk)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 656,
          "code": "total_cost = db.query(func.sum(TimeEntry.billing_amount)).filter(",
          "match": ".query(func.sum(TimeEntry.billing_amount)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 694,
          "code": "active_resources = db.query(ProjectResource).join(ProjectExtended).filter(",
          "match": ".query(ProjectResource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 700,
          "code": "total_budget = db.query(func.sum(ProjectExtended.total_budget)).filter(",
          "match": ".query(func.sum(ProjectExtended.total_budget)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 705,
          "code": "actual_cost = db.query(func.sum(ProjectExtended.actual_cost)).filter(",
          "match": ".query(func.sum(ProjectExtended.actual_cost)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 724,
          "code": "project = db.query(ProjectExtended).filter(ProjectExtended.id == project_id).first()",
          "match": ".query(ProjectExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/project_v31.py",
          "line": 754,
          "code": "high_risks = db.query(ProjectRisk).filter(",
          "match": ".query(ProjectRisk)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 108,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 123,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 144,
          "code": "query = self.db.query(Employee).filter(Employee.department_id == department_id)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 154,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 231,
          "code": "self.db.query(Employee.employee_number)",
          "match": ".query(Employee.employee_number)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 260,
          "code": "employee = self.db.query(Employee).filter(Employee.id == employee_id).first()",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 341,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 370,
          "code": "self.db.query(PayrollRecord)",
          "match": ".query(PayrollRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 404,
          "code": "self.db.query(PayrollRecord)",
          "match": ".query(PayrollRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 437,
          "code": "employee = self.db.query(Employee).filter(Employee.id == obj_in.employee_id).first()",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 485,
          "code": "self.db.query(LeaveRequest)",
          "match": ".query(LeaveRequest)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 517,
          "code": "employee = self.db.query(Employee).filter(Employee.id == employee_id).first()",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 546,
          "code": "employee = self.db.query(Employee).filter(Employee.id == employee_id).first()",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 571,
          "code": "self.db.query(func.sum(LeaveRequest.total_days))",
          "match": ".query(func.sum(LeaveRequest.total_days)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 616,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 627,
          "code": "self.db.query(PerformanceReview)",
          "match": ".query(PerformanceReview)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 742,
          "code": "self.db.query(PerformanceReview)",
          "match": ".query(PerformanceReview)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 792,
          "code": "employee = self.db.query(Employee).filter(Employee.id == employee_id).first()",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 848,
          "code": "self.db.query(TrainingRecord)",
          "match": ".query(TrainingRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 910,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 918,
          "code": "self.db.query(TrainingRecord)",
          "match": ".query(TrainingRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 953,
          "code": "self.db.query(TrainingRecord)",
          "match": ".query(TrainingRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 984,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 997,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1006,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1015,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1023,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1038,
          "code": "self.db.query(PerformanceReview)",
          "match": ".query(PerformanceReview)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1050,
          "code": "self.db.query(TrainingRecord)",
          "match": ".query(TrainingRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1062,
          "code": "self.db.query(PayrollRecord)",
          "match": ".query(PayrollRecord)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1107,
          "code": "self.db.query(HRAnalytics)",
          "match": ".query(HRAnalytics)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1119,
          "code": "self.db.query(Employee)",
          "match": ".query(Employee)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1127,
          "code": "self.db.query(LeaveRequest)",
          "match": ".query(LeaveRequest)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
          "line": 1135,
          "code": "self.db.query(PerformanceReview)",
          "match": ".query(PerformanceReview)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 104,
          "code": "self.db.query(Account)",
          "match": ".query(Account)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 118,
          "code": "query = self.db.query(Account).filter(",
          "match": ".query(Account)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 133,
          "code": "self.db.query(Account)",
          "match": ".query(Account)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 174,
          "code": "self.db.query(Account.account_code)",
          "match": ".query(Account.account_code)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 339,
          "code": "self.db.query(JournalEntryLine)",
          "match": ".query(JournalEntryLine)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 419,
          "code": "self.db.query(JournalEntry.entry_number)",
          "match": ".query(JournalEntry.entry_number)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 564,
          "code": "account = self.db.query(Account).filter(Account.id == account_id).first()",
          "match": ".query(Account)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 661,
          "code": "self.db.query(CostCenter.cost_center_code)",
          "match": ".query(CostCenter.cost_center_code)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 692,
          "code": "self.db.query(JournalEntry)",
          "match": ".query(JournalEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 882,
          "code": "self.db.query(TaxConfiguration)",
          "match": ".query(TaxConfiguration)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
          "line": 904,
          "code": "self.db.query(TaxConfiguration)",
          "match": ".query(TaxConfiguration)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 51,
          "code": "count = db.query(CustomerExtended).filter(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 59,
          "code": "manager = db.query(User).filter(User.id == customer_data.account_manager_id).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 81,
          "code": "return db.query(CustomerExtended).options(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 97,
          "code": "query = db.query(CustomerExtended)",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 132,
          "code": "customer = db.query(CustomerExtended).filter(CustomerExtended.id == customer_id).first()",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 141,
          "code": "manager = db.query(User).filter(User.id == update_data[\"account_manager_id\"]).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 159,
          "code": "customer = db.query(CustomerExtended).filter(CustomerExtended.id == customer_id).first()",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 178,
          "code": "last_activity = db.query(func.max(CRMActivity.activity_date)).filter(",
          "match": ".query(func.max(CRMActivity.activity_date)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 192,
          "code": "open_tickets = db.query(SupportTicket).filter(",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 197,
          "code": "recent_tickets = db.query(SupportTicket).filter(",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 285,
          "code": "customer = db.query(CustomerExtended).filter(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 295,
          "code": "existing_contacts = db.query(ContactExtended).filter(",
          "match": ".query(ContactExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 311,
          "code": "return db.query(ContactExtended).options(",
          "match": ".query(ContactExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 324,
          "code": "query = db.query(ContactExtended)",
          "match": ".query(ContactExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 357,
          "code": "contact = db.query(ContactExtended).filter(ContactExtended.id == contact_id).first()",
          "match": ".query(ContactExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 383,
          "code": "count = db.query(LeadExtended).filter(",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 439,
          "code": "return db.query(LeadExtended).options(",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 453,
          "code": "query = db.query(LeadExtended)",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 489,
          "code": "lead = db.query(LeadExtended).filter(LeadExtended.id == lead_id).first()",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 524,
          "code": "lead = db.query(LeadExtended).filter(LeadExtended.id == lead_id).first()",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 602,
          "code": "customer = db.query(CustomerExtended).filter(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 611,
          "code": "count = db.query(OpportunityExtended).filter(",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 632,
          "code": "return db.query(OpportunityExtended).options(",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 646,
          "code": "query = db.query(OpportunityExtended)",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 676,
          "code": "opportunity = db.query(OpportunityExtended).filter(OpportunityExtended.id == opportunity_id).first()",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 729,
          "code": "query = db.query(CRMActivity)",
          "match": ".query(CRMActivity)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 760,
          "code": "activity = db.query(CRMActivity).filter(CRMActivity.id == activity_id).first()",
          "match": ".query(CRMActivity)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 786,
          "code": "count = db.query(CampaignExtended).filter(",
          "match": ".query(CampaignExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 803,
          "code": "return db.query(CampaignExtended).options(",
          "match": ".query(CampaignExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 815,
          "code": "query = db.query(CampaignExtended)",
          "match": ".query(CampaignExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 832,
          "code": "campaign = db.query(CampaignExtended).filter(CampaignExtended.id == campaign_id).first()",
          "match": ".query(CampaignExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 867,
          "code": "customer = db.query(CustomerExtended).filter(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 876,
          "code": "count = db.query(SupportTicket).filter(",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 905,
          "code": "return db.query(SupportTicket).options(",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 919,
          "code": "query = db.query(SupportTicket)",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 941,
          "code": "ticket = db.query(SupportTicket).filter(SupportTicket.id == ticket_id).first()",
          "match": ".query(SupportTicket)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 987,
          "code": "leads_created = db.query(LeadExtended).filter(",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 993,
          "code": "leads_converted = db.query(LeadExtended).filter(",
          "match": ".query(LeadExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1001,
          "code": "opportunities_created = db.query(OpportunityExtended).filter(",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1007,
          "code": "opportunities_won = db.query(OpportunityExtended).filter(",
          "match": ".query(OpportunityExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1015,
          "code": "total_revenue = db.query(func.sum(OpportunityExtended.amount)).filter(",
          "match": ".query(func.sum(OpportunityExtended.amount)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1023,
          "code": "pipeline_value = db.query(func.sum(OpportunityExtended.amount)).filter(",
          "match": ".query(func.sum(OpportunityExtended.amount)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1030,
          "code": "new_customers = db.query(CustomerExtended).filter(",
          "match": ".query(CustomerExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/crm_v31.py",
          "line": 1037,
          "code": "total_activities = db.query(CRMActivity).filter(",
          "match": ".query(CRMActivity)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 33,
          "code": "existing_customer = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 46,
          "code": "existing_email = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 71,
          "code": "return db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 81,
          "code": "return db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 102,
          "code": "query = db.query(Customer).filter(Customer.deleted_at.is_(None))",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 155,
          "code": "existing_customer = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 168,
          "code": "existing_email = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 267,
          "code": "return db.query(SalesOrder).filter(",
          "match": ".query(SalesOrder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 277,
          "code": "return db.query(SalesOrder).filter(",
          "match": ".query(SalesOrder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 301,
          "code": "query = db.query(SalesOrder).filter(SalesOrder.deleted_at.is_(None))",
          "match": ".query(SalesOrder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 424,
          "code": "product = db.query(Product).filter(Product.id == item_data.product_id).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 455,
          "code": "return db.query(SalesOrderItem).filter(",
          "match": ".query(SalesOrderItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 470,
          "code": "item = db.query(SalesOrderItem).filter(",
          "match": ".query(SalesOrderItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 516,
          "code": "last_order = db.query(SalesOrder).filter(",
          "match": ".query(SalesOrder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 538,
          "code": "last_customer = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 564,
          "code": "query = db.query(SalesOrder).filter(SalesOrder.deleted_at.is_(None))",
          "match": ".query(SalesOrder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 581,
          "code": "total_revenue = db.query(func.sum(SalesOrder.total_amount)).filter(",
          "match": ".query(func.sum(SalesOrder.total_amount)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/sales_basic.py",
          "line": 604,
          "code": "customer_count = db.query(Customer).filter(",
          "match": ".query(Customer)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 126,
          "code": "query = self.db.query(AuditLogEntry)",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 215,
          "code": "return self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 230,
          "code": "entry = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 281,
          "code": "query = self.db.query(AuditRule)",
          "match": ".query(AuditRule)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 304,
          "code": "rule = self.db.query(AuditRule).filter(AuditRule.id == rule_id).first()",
          "match": ".query(AuditRule)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 353,
          "code": "query = self.db.query(AuditAlert)",
          "match": ".query(AuditAlert)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 387,
          "code": "alert = self.db.query(AuditAlert).filter(AuditAlert.id == alert_id).first()",
          "match": ".query(AuditAlert)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 436,
          "code": "query = self.db.query(AuditReport)",
          "match": ".query(AuditReport)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 483,
          "code": "session = self.db.query(AuditSession).filter(",
          "match": ".query(AuditSession)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 515,
          "code": "session = self.db.query(AuditSession).filter(",
          "match": ".query(AuditSession)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 557,
          "code": "compliance_query = self.db.query(AuditCompliance).filter(",
          "match": ".query(AuditCompliance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 619,
          "code": "logs_query = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 645,
          "code": "alerts_query = self.db.query(AuditAlert).filter(",
          "match": ".query(AuditAlert)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 673,
          "code": "active_users = self.db.query(AuditSession.user_id).filter(",
          "match": ".query(AuditSession.user_id)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 712,
          "code": "security_events = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 726,
          "code": "active_alerts = self.db.query(AuditAlert).filter(",
          "match": ".query(AuditAlert)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 734,
          "code": "high_risk_sessions = self.db.query(AuditSession).filter(",
          "match": ".query(AuditSession)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 743,
          "code": "failed_logins = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 770,
          "code": "policy = self.db.query(AuditDataRetention).filter(",
          "match": ".query(AuditDataRetention)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 782,
          "code": "records_to_delete = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 789,
          "code": "records_to_archive = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 903,
          "code": "rules = self.db.query(AuditRule).filter(",
          "match": ".query(AuditRule)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 956,
          "code": "logs_query = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 997,
          "code": "recent_events = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
          "line": 1005,
          "code": "violations = self.db.query(AuditLogEntry).filter(",
          "match": ".query(AuditLogEntry)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 107,
          "code": "data_source = db.query(AnalyticsDataSource).filter(",
          "match": ".query(AnalyticsDataSource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 146,
          "code": "data_source = db.query(AnalyticsDataSource).filter(",
          "match": ".query(AnalyticsDataSource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 287,
          "code": "metric = db.query(AnalyticsMetric).filter(",
          "match": ".query(AnalyticsMetric)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 417,
          "code": "data_points = db.query(AnalyticsDataPoint).filter(",
          "match": ".query(AnalyticsDataPoint)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 507,
          "code": "dashboard = db.query(AnalyticsDashboard).filter(",
          "match": ".query(AnalyticsDashboard)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 585,
          "code": "metric = db.query(AnalyticsMetric).filter(",
          "match": ".query(AnalyticsMetric)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 593,
          "code": "latest_point = db.query(AnalyticsDataPoint).filter(",
          "match": ".query(AnalyticsDataPoint)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 682,
          "code": "report = db.query(AnalyticsReport).filter(",
          "match": ".query(AnalyticsReport)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 804,
          "code": "prediction = db.query(AnalyticsPrediction).filter(",
          "match": ".query(AnalyticsPrediction)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 866,
          "code": "prediction = db.query(AnalyticsPrediction).filter(",
          "match": ".query(AnalyticsPrediction)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 952,
          "code": "alerts = db.query(AnalyticsAlert).filter(",
          "match": ".query(AnalyticsAlert)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1002,
          "code": "query = db.query(AnalyticsMetric).filter(",
          "match": ".query(AnalyticsMetric)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1111,
          "code": "total_metrics = db.query(AnalyticsMetric).count()",
          "match": ".query(AnalyticsMetric)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1112,
          "code": "active_data_sources = db.query(AnalyticsDataSource).filter(",
          "match": ".query(AnalyticsDataSource)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1115,
          "code": "total_dashboards = db.query(AnalyticsDashboard).filter(",
          "match": ".query(AnalyticsDashboard)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/analytics_v31.py",
          "line": 1118,
          "code": "recent_data_points = db.query(AnalyticsDataPoint).filter(",
          "match": ".query(AnalyticsDataPoint)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 120,
          "code": "document = db.query(DocumentExtended).options(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 154,
          "code": "query = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 204,
          "code": "document = db.query(DocumentExtended).filter(DocumentExtended.id == document_id).first()",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 297,
          "code": "document = db.query(DocumentExtended).filter(DocumentExtended.id == document_id).first()",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 326,
          "code": "parent = db.query(DocumentFolder).filter(",
          "match": ".query(DocumentFolder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 372,
          "code": "subfolders = db.query(DocumentFolder).filter(",
          "match": ".query(DocumentFolder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 379,
          "code": "documents = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 484,
          "code": "query = db.query(DocumentShare).filter(",
          "match": ".query(DocumentShare)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 509,
          "code": "share = db.query(DocumentShare).filter(DocumentShare.id == share_id).first()",
          "match": ".query(DocumentShare)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 584,
          "code": "comment = db.query(DocumentComment).filter(DocumentComment.id == comment_id).first()",
          "match": ".query(DocumentComment)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 653,
          "code": "workflow = db.query(DocumentWorkflow).filter(DocumentWorkflow.id == workflow_id).first()",
          "match": ".query(DocumentWorkflow)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 707,
          "code": "approval = db.query(DocumentApproval).filter(DocumentApproval.id == approval_id).first()",
          "match": ".query(DocumentApproval)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 720,
          "code": "remaining_approvals = db.query(DocumentApproval).filter(",
          "match": ".query(DocumentApproval)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 744,
          "code": "pending_approvals = db.query(DocumentApproval).filter(",
          "match": ".query(DocumentApproval)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 825,
          "code": "signature = db.query(DocumentSignature).filter(DocumentSignature.id == signature_id).first()",
          "match": ".query(DocumentSignature)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 860,
          "code": "pending_signatures = db.query(DocumentSignature).filter(",
          "match": ".query(DocumentSignature)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 928,
          "code": "template = db.query(DocumentTemplate).filter(DocumentTemplate.id == template_id).first()",
          "match": ".query(DocumentTemplate)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 986,
          "code": "query = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1049,
          "code": "total_docs = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1054,
          "code": "new_docs = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1060,
          "code": "updated_docs = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1067,
          "code": "deleted_docs = db.query(DocumentExtended).filter(",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1085,
          "code": "activities = db.query(DocumentActivity).filter(",
          "match": ".query(DocumentActivity)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1100,
          "code": "comments = db.query(DocumentComment).filter(",
          "match": ".query(DocumentComment)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1106,
          "code": "active_collaborators = db.query(DocumentComment).filter(",
          "match": ".query(DocumentComment)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1113,
          "code": "approvals_requested = db.query(DocumentApproval).filter(",
          "match": ".query(DocumentApproval)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1119,
          "code": "approvals_completed = db.query(DocumentApproval).filter(",
          "match": ".query(DocumentApproval)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1127,
          "code": "signatures_requested = db.query(DocumentSignature).filter(",
          "match": ".query(DocumentSignature)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1133,
          "code": "signatures_completed = db.query(DocumentSignature).filter(",
          "match": ".query(DocumentSignature)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1188,
          "code": "organization_id=db.query(DocumentExtended.organization_id).filter(",
          "match": ".query(DocumentExtended.organization_id)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1207,
          "code": "folder = db.query(DocumentFolder).filter(DocumentFolder.id == folder_id).first()",
          "match": ".query(DocumentFolder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1221,
          "code": "subfolder_count = db.query(DocumentFolder).filter(",
          "match": ".query(DocumentFolder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1241,
          "code": "total_documents = db.query(DocumentExtended).count()",
          "match": ".query(DocumentExtended)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1242,
          "code": "total_storage = db.query(func.sum(DocumentExtended.file_size_bytes)).scalar() or 0",
          "match": ".query(func.sum(DocumentExtended.file_size_bytes)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/document_v31.py",
          "line": 1243,
          "code": "total_folders = db.query(DocumentFolder).count()",
          "match": ".query(DocumentFolder)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 35,
          "code": "return db.query(self.model).filter(self.model.id == id).first()",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 41,
          "code": "return db.query(self.model).offset(skip).limit(limit).all()",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 75,
          "code": "obj = db.query(self.model).get(id)",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 82,
          "code": "return db.query(self.model).filter(getattr(self.model, field_name) == value).first()",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 89,
          "code": "db.query(self.model)",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 98,
          "code": "return db.query(self.model).count()",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/base.py",
          "line": 102,
          "code": "return db.query(self.model).filter(self.model.id == id).first() is not None",
          "match": ".query(self.model)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 26,
          "code": "existing_org = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 51,
          "code": "return db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 61,
          "code": "return db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 80,
          "code": "query = db.query(Organization).filter(Organization.deleted_at.is_(None))",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 133,
          "code": "existing_org = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 181,
          "code": "children = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 205,
          "code": "return db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 216,
          "code": "total_orgs = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 220,
          "code": "active_orgs = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 227,
          "code": "root_orgs = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/organization_basic.py",
          "line": 234,
          "code": "subsidiary_orgs = db.query(Organization).filter(",
          "match": ".query(Organization)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 64,
          "code": "existing = db.query(WorkflowDefinition).filter(",
          "match": ".query(WorkflowDefinition)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 103,
          "code": "return db.query(WorkflowDefinition).options(",
          "match": ".query(WorkflowDefinition)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 119,
          "code": "query = db.query(WorkflowDefinition).filter(WorkflowDefinition.organization_id == organization_id)",
          "match": ".query(WorkflowDefinition)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 152,
          "code": "definition = db.query(WorkflowDefinition).filter(WorkflowDefinition.id == definition_id).first()",
          "match": ".query(WorkflowDefinition)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 251,
          "code": "return db.query(WorkflowInstance).options(",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 271,
          "code": "query = db.query(WorkflowInstance).filter(WorkflowInstance.organization_id == organization_id)",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 314,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 391,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 427,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 466,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 479,
          "code": "instance = db.query(WorkflowInstance).filter(WorkflowInstance.id == task.instance_id).first()",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 516,
          "code": "parent = db.query(WorkflowComment).filter(WorkflowComment.id == comment.parent_comment_id).first()",
          "match": ".query(WorkflowComment)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 523,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 553,
          "code": "task = db.query(WorkflowTask).filter(WorkflowTask.id == task_id).first()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 581,
          "code": "instances_query = db.query(WorkflowInstance).filter(",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 624,
          "code": "tasks_query = db.query(WorkflowTask).join(WorkflowInstance).filter(",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 668,
          "code": "active_instances = db.query(WorkflowInstance).filter(",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 674,
          "code": "overdue_tasks = db.query(WorkflowTask).join(WorkflowInstance).filter(",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 681,
          "code": "completed_instances = db.query(WorkflowInstance).filter(",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 758,
          "code": "count = db.query(WorkflowInstance).filter(",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 766,
          "code": "instance = db.query(WorkflowInstance).filter(WorkflowInstance.id == instance_id).first()",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 767,
          "code": "task_count = db.query(WorkflowTask).filter(WorkflowTask.instance_id == instance_id).count()",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 774,
          "code": "first_step = db.query(WorkflowStep).filter(",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 821,
          "code": "current_step = db.query(WorkflowStep).filter(WorkflowStep.id == current_step_id).first()",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 829,
          "code": "next_step = db.query(WorkflowStep).filter(",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 837,
          "code": "return db.query(WorkflowStep).filter(WorkflowStep.id == next_step_ids[0]).first()",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 855,
          "code": "step = db.query(WorkflowStep).filter(WorkflowStep.id == step_id).first()",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 862,
          "code": "return db.query(WorkflowStep).filter(WorkflowStep.id == next_step_ids[0]).first()",
          "match": ".query(WorkflowStep)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 907,
          "code": "completed_tasks = db.query(WorkflowTask).filter(",
          "match": ".query(WorkflowTask)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/workflow_v31.py",
          "line": 931,
          "code": "organization_id=db.query(WorkflowInstance).filter(WorkflowInstance.id == instance_id).first().organization_id,",
          "match": ".query(WorkflowInstance)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 18,
          "code": "existing_user = db.query(User).filter(User.email == user_data.email).first()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 46,
          "code": "return db.query(User).filter(",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 56,
          "code": "return db.query(User).filter(",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 75,
          "code": "query = db.query(User).filter(User.deleted_at.is_(None))",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 159,
          "code": "query = db.query(User).filter(",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 174,
          "code": "total_users = db.query(User).filter(User.deleted_at.is_(None)).count()",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/user_basic.py",
          "line": 175,
          "code": "active_users = db.query(User).filter(",
          "match": ".query(User)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 31,
          "code": "existing_product = db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 43,
          "code": "existing_sku = db.query(Product).filter(Product.sku == product_data.sku).first()",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 62,
          "code": "return db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 72,
          "code": "return db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 83,
          "code": "return db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 105,
          "code": "query = db.query(Product).filter(Product.deleted_at.is_(None))",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 165,
          "code": "existing_product = db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 178,
          "code": "existing_sku = db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 238,
          "code": "subcategories = db.query(ProductCategory).filter(",
          "match": ".query(ProductCategory)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 243,
          "code": "return db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 251,
          "code": "return db.query(Product).filter(",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 268,
          "code": "existing_category = db.query(ProductCategory).filter(",
          "match": ".query(ProductCategory)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 294,
          "code": "return db.query(ProductCategory).filter(",
          "match": ".query(ProductCategory)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 309,
          "code": "query = db.query(ProductCategory).filter(ProductCategory.deleted_at.is_(None))",
          "match": ".query(ProductCategory)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/product_basic.py",
          "line": 328,
          "code": "query = db.query(Product).filter(Product.deleted_at.is_(None))",
          "match": ".query(Product)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 34,
          "code": "existing_warehouse = db.query(Warehouse).filter(",
          "match": ".query(Warehouse)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 60,
          "code": "return db.query(Warehouse).filter(",
          "match": ".query(Warehouse)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 77,
          "code": "query = db.query(Warehouse).filter(Warehouse.deleted_at.is_(None))",
          "match": ".query(Warehouse)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 123,
          "code": "existing_warehouse = db.query(Warehouse).filter(",
          "match": ".query(Warehouse)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 157,
          "code": "existing_item = db.query(InventoryItem).filter(",
          "match": ".query(InventoryItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 189,
          "code": "return db.query(InventoryItem).filter(",
          "match": ".query(InventoryItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 208,
          "code": "query = db.query(InventoryItem).filter(InventoryItem.deleted_at.is_(None))",
          "match": ".query(InventoryItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 343,
          "code": "query = db.query(StockMovement).filter(StockMovement.deleted_at.is_(None))",
          "match": ".query(StockMovement)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 450,
          "code": "query = db.query(InventoryItem).filter(InventoryItem.deleted_at.is_(None))",
          "match": ".query(InventoryItem)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 463,
          "code": "total_value = db.query(func.sum(InventoryItem.total_cost)).filter(",
          "match": ".query(func.sum(InventoryItem.total_cost)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 492,
          "code": "\"warehouses_count\": db.query(Warehouse).filter(",
          "match": ".query(Warehouse)"
        },
        {
          "file": "/home/work/ITDO_ERP2/backend/app/crud/inventory_basic.py",
          "line": 513,
          "code": "last_movement = db.query(StockMovement).filter(",
          "match": ".query(StockMovement)"
        }
      ]
    },
    "n_plus_1_risks": [
      {
        "file": "/home/work/ITDO_ERP2/backend/app/crud/hr_v31.py",
        "line": 134,
        "pattern": "potential_n_plus_1",
        "description": "Loop with nested query - potential N+1 problem",
        "suggestion": "Consider using joinedload() or selectinload()"
      },
      {
        "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
        "line": 224,
        "pattern": "potential_n_plus_1",
        "description": "Loop with nested query - potential N+1 problem",
        "suggestion": "Consider using joinedload() or selectinload()"
      },
      {
        "file": "/home/work/ITDO_ERP2/backend/app/crud/finance_v31.py",
        "line": 224,
        "pattern": "potential_n_plus_1",
        "description": "Loop with nested query - potential N+1 problem",
        "suggestion": "Consider using joinedload() or selectinload()"
      },
      {
        "file": "/home/work/ITDO_ERP2/backend/app/crud/audit_v31.py",
        "line": 89,
        "pattern": "potential_n_plus_1",
        "description": "Loop with nested query - potential N+1 problem",
        "suggestion": "Consider using joinedload() or selectinload()"
      }
    ],
    "performance_issues": [],
    "optimization_opportunities": []
  },
  "recommendations": {
    "timestamp": "2025-07-23T15:26:24.208661",
    "priority_high": [
      {
        "category": "n_plus_1_elimination",
        "issue": "4 potential N+1 query issues detected",
        "impact": "High performance impact on database load",
        "effort": "Medium",
        "solution": "Implement eager loading with joinedload() or selectinload()"
      },
      {
        "category": "anti_pattern_elimination",
        "pattern": "no_limit",
        "occurrences": 88,
        "issue": "Anti-pattern 'no_limit' found in 88 locations",
        "impact": "High performance impact",
        "effort": "Low to Medium"
      }
    ],
    "priority_medium": [
      {
        "category": "anti_pattern_elimination",
        "pattern": "missing_eager_loading",
        "occurrences": 391,
        "issue": "Anti-pattern 'missing_eager_loading' found in 391 locations",
        "impact": "Medium performance impact",
        "effort": "Low to Medium"
      }
    ],
    "priority_low": [],
    "quick_wins": [
      {
        "category": "index_optimization",
        "issue": "141 missing indexes on foreign keys",
        "solution": "Add database indexes to foreign key columns",
        "effort": "Very Low",
        "impact": "High for join performance"
      }
    ],
    "long_term_improvements": [
      {
        "category": "query_monitoring",
        "issue": "No query performance monitoring detected",
        "solution": "Implement SQLAlchemy query logging and monitoring",
        "effort": "Medium",
        "impact": "Enables continuous optimization"
      },
      {
        "category": "database_profiling",
        "issue": "Regular database profiling not implemented",
        "solution": "Set up periodic EXPLAIN ANALYZE for slow queries",
        "effort": "Medium",
        "impact": "Identifies performance bottlenecks"
      },
      {
        "category": "caching_strategy",
        "issue": "Limited caching implementation detected",
        "solution": "Implement Redis caching for frequently accessed data",
        "effort": "High",
        "impact": "Significant performance improvement for read operations"
      }
    ]
  },
  "migration_scripts": [
    "\"\"\"Add missing indexes for foreign keys\n\nRevision ID: optimize_indexes_20250723_152624\nRevises: \nCreate Date: 2025-07-23T15:26:24.208781\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\n\n# revision identifiers\nrevision = 'optimize_indexes_20250723_152624'\ndown_revision = None\nbranch_labels = None\ndepends_on = None\n\ndef upgrade():\n    \"\"\"Add missing indexes for better join performance\"\"\"\n    # Example index creations - customize based on actual analysis\n    op.create_index('idx_users_organization_id', 'users', ['organization_id'])\n    op.create_index('idx_projects_customer_id', 'projects', ['customer_id'])\n    op.create_index('idx_tasks_project_id', 'tasks', ['project_id'])\n    op.create_index('idx_expenses_user_id', 'expenses', ['user_id'])\n    \n    # Composite indexes for common query patterns\n    op.create_index('idx_users_org_status', 'users', ['organization_id', 'status'])\n    op.create_index('idx_projects_customer_status', 'projects', ['customer_id', 'status'])\n\ndef downgrade():\n    \"\"\"Remove the indexes\"\"\"\n    op.drop_index('idx_projects_customer_status')\n    op.drop_index('idx_users_org_status')\n    op.drop_index('idx_expenses_user_id')\n    op.drop_index('idx_tasks_project_id')\n    op.drop_index('idx_projects_customer_id')\n    op.drop_index('idx_users_organization_id')\n"
  ],
  "summary": {
    "total_models": 166,
    "total_query_locations": 399,
    "high_priority_issues": 2,
    "medium_priority_issues": 1,
    "quick_wins": 1,
    "potential_performance_gain": "Estimated 20-40% query performance improvement"
  }
}