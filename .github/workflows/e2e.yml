name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: itdo_user
          POSTGRES_PASSWORD: itdo_password
          POSTGRES_DB: itdo_erp_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            backend/.venv
            frontend/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install backend dependencies
        working-directory: backend
        run: |
          uv sync

      - name: Install frontend dependencies
        working-directory: frontend
        run: |
          npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: |
          npx playwright install --with-deps

      - name: Setup test environment
        working-directory: backend
        run: |
          cp .env.example .env
          echo "DATABASE_URL=postgresql://itdo_user:itdo_password@localhost:5432/itdo_erp_test" >> .env
          echo "REDIS_URL=redis://localhost:6379/0" >> .env
          echo "SECRET_KEY=test-secret-key" >> .env
          echo "ENVIRONMENT=test" >> .env
          echo "BACKEND_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000" >> .env
          echo "API_V1_PREFIX=/api/v1" >> .env

      - name: Wait for services
        run: |
          echo "Waiting for PostgreSQL..."
          timeout 30 bash -c 'until nc -z localhost 5432; do sleep 1; done'
          echo "Waiting for Redis..."
          timeout 30 bash -c 'until nc -z localhost 6379; do sleep 1; done'
          echo "Services are ready!"

      - name: Run database migrations
        working-directory: backend
        run: |
          uv run alembic upgrade head

      - name: Setup test data
        working-directory: backend
        run: |
          uv run python scripts/setup_test_data.py

      - name: Start backend service
        working-directory: backend
        run: |
          uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          BACKEND_PID=$!
          echo "Backend PID: $BACKEND_PID"
          echo $BACKEND_PID > backend.pid
          sleep 10

      - name: Backend health check
        run: |
          echo "Checking backend health..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/health; then
              echo "Backend is healthy!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Backend health check failed"
              exit 1
            fi
            sleep 2
          done

      - name: Run E2E tests
        working-directory: frontend
        run: |
          npm run e2e:ci
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          VITE_API_URL: http://localhost:8000
          VITE_API_BASE_URL: http://localhost:8000/api/v1

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            frontend/test-results/
            frontend/playwright-report/
          retention-days: 30

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-screenshots
          path: frontend/test-results/
          retention-days: 7