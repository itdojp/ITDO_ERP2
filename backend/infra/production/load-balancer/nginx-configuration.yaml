---
# NGINX Plus Configuration Templates
# CC03 v68.0 Day 3: Advanced Load Balancing Configuration

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-plus-config-template
  namespace: itdo-erp-production
  labels:
    app: nginx-plus
    component: configuration
data:
  nginx.conf: |
    # NGINX Plus Main Configuration
    user nginx;
    worker_processes auto;
    worker_rlimit_nofile 65535;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    # Load dynamic modules
    load_module modules/ngx_http_app_protect_module.so;
    load_module modules/ngx_http_js_module.so;
    
    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
        accept_mutex off;
    }
    
    http {
        # Basic Settings
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        server_name_in_redirect off;
        server_tokens off;
        
        # Performance Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        keepalive_requests 100;
        client_max_body_size 100M;
        client_body_timeout 60;
        client_header_timeout 60;
        send_timeout 60;
        
        # Gzip Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Buffer Settings
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 16k;
        output_buffers 1 32k;
        postpone_output 1460;
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
        limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
        limit_conn_zone $binary_remote_addr zone=addr:10m;
        
        # Real IP Configuration (for cloud environments)
        set_real_ip_from 10.0.0.0/8;
        set_real_ip_from 172.16.0.0/12;
        set_real_ip_from 192.168.0.0/16;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;
        
        # Security Headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https: wss:; frame-ancestors 'none';" always;
        
        # Custom Log Format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        log_format json_combined escape=json '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"upstream_connect_time":"$upstream_connect_time",'
            '"upstream_header_time":"$upstream_header_time",'
            '"upstream_response_time":"$upstream_response_time",'
            '"upstream_addr":"$upstream_addr"'
            '}';
        
        access_log /var/log/nginx/access.log json_combined;
        
        # Include additional configurations
        include /etc/nginx/conf.d/*.conf;
        
        # Default server block (catch-all)
        server {
            listen 80 default_server;
            listen 443 ssl default_server;
            server_name _;
            
            # SSL Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            return 444;
        }
        
        # Health Check and Status Endpoint
        server {
            listen 8080;
            server_name localhost;
            
            location /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
            }
            
            location /api {
                api write=on;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
            }
            
            location = /dashboard.html {
                root /usr/share/nginx/html;
            }
        }
    }
  
  upstream.conf: |
    # Upstream Configuration for ITDO ERP Backend Services
    
    # Main Application Backend Cluster
    upstream itdo_erp_backend {
        zone itdo_erp_backend 64k;
        
        # Primary backend instances
        server BACKEND_SERVICE_1:8000 weight=3 max_fails=3 fail_timeout=30s;
        server BACKEND_SERVICE_2:8000 weight=3 max_fails=3 fail_timeout=30s;
        
        # Health checks
        health_check interval=10s fails=3 passes=2 uri=/health match=backend_ok;
        
        # Session persistence
        sticky cookie srv_id expires=1h domain=.itdo-erp.com path=/;
        
        # Load balancing method
        least_conn;
        
        # Connection keepalive
        keepalive 32;
        keepalive_timeout 60s;
        keepalive_requests 100;
    }
    
    # Database Connection Proxy (PostgreSQL)
    upstream postgres_cluster {
        zone postgres_cluster 64k;
        
        # Primary database
        server POSTGRES_SERVICE:5432 weight=5 max_fails=2 fail_timeout=60s;
        
        # Read replicas
        server postgresql-replica-1:5432 weight=1 max_fails=2 fail_timeout=60s backup;
        server postgresql-replica-2:5432 weight=1 max_fails=2 fail_timeout=60s backup;
        
        # Health check for database
        health_check interval=30s fails=2 passes=1 port=5432 match=postgres_ok;
    }
    
    # Redis Cache Cluster
    upstream redis_cluster {
        zone redis_cluster 64k;
        
        # Redis master
        server REDIS_SERVICE:6379 weight=5 max_fails=2 fail_timeout=30s;
        
        # Redis replicas for read operations
        server redis-replica-service:6379 weight=1 max_fails=2 fail_timeout=30s backup;
        
        # Health check for Redis
        health_check interval=15s fails=2 passes=1 port=6379 match=redis_ok;
    }
    
    # Websocket Backend for Real-time Features
    upstream websocket_backend {
        zone websocket_backend 64k;
        
        server BACKEND_SERVICE_1:8001 weight=1 max_fails=2 fail_timeout=30s;
        server BACKEND_SERVICE_2:8001 weight=1 max_fails=2 fail_timeout=30s;
        
        # IP hash for websocket connection affinity
        ip_hash;
        
        health_check interval=10s fails=2 passes=1 uri=/ws/health match=websocket_ok;
    }
    
    # Health Check Matchers
    match backend_ok {
        status 200;
        header Content-Type ~ "application/json";
        body ~ "healthy";
    }
    
    match postgres_ok {
        status 200;
    }
    
    match redis_ok {
        status 200;
    }
    
    match websocket_ok {
        status 101;
        header Upgrade = websocket;
    }
    
    # Main ITDO ERP Application Server
    server {
        listen 80;
        listen 443 ssl http2;
        server_name itdo-erp.com www.itdo-erp.com;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        
        # Security configurations
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Redirect HTTP to HTTPS
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;
        
        # Frontend static files
        location / {
            proxy_pass http://itdo_erp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
            
            # Cache static assets
            location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1M;
                add_header Cache-Control "public, immutable";
                proxy_pass http://itdo_erp_backend;
            }
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://itdo_erp_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Authentication endpoints (stricter rate limiting)
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://itdo_erp_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security for authentication
            proxy_ssl_verify on;
            proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        }
        
        # WebSocket endpoints
        location /ws/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            
            # No buffering for WebSocket
            proxy_buffering off;
        }
        
        # File upload endpoint
        location /api/upload/ {
            client_max_body_size 500M;
            proxy_request_buffering off;
            
            proxy_pass http://itdo_erp_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for file uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Security.txt
        location /.well-known/security.txt {
            return 200 "Contact: security@itdo-erp.com\nExpires: 2025-12-31T23:59:59.999Z\nEncryption: https://itdo-erp.com/pgp-key.txt\nAcknowledgments: https://itdo-erp.com/security-thanks\nPolicy: https://itdo-erp.com/security-policy\n";
            add_header Content-Type text/plain;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
  
  ssl.conf: |
    # Advanced SSL/TLS Configuration
    # CC03 v68.0 Day 3: Enterprise SSL Security
    
    # SSL Protocols and Ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;
    
    # SSL Session Settings
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_stapling_file /etc/nginx/ssl/ocsp.resp;
    
    # SSL Buffer Size
    ssl_buffer_size 4k;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Certificate Transparency
    ssl_ct on;
    ssl_ct_static_scts /etc/nginx/ssl/scts;
    
    # Client Certificate Configuration (for mutual TLS)
    # ssl_client_certificate /etc/nginx/ssl/client-ca.crt;
    # ssl_verify_client optional;
    # ssl_verify_depth 2;
    
    # Early Data (0-RTT) for TLS 1.3
    ssl_early_data on;
    proxy_set_header Early-Data $ssl_early_data;
    
    # Custom DH Parameters
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL Error Pages
    error_page 495 496 497 @ssl_error;
    
    location @ssl_error {
        return 400 '{"error": "SSL Certificate Error", "message": "Invalid SSL certificate or configuration"}';
        add_header Content-Type application/json;
    }