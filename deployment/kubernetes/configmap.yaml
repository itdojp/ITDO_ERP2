apiVersion: v1
kind: ConfigMap
metadata:
  name: itdo-erp-config
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp
    app.kubernetes.io/component: config
data:
  # Database Configuration
  DATABASE_HOST: "postgresql-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "itdo_erp"
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_POOL_SIZE: "10"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  API_TIMEOUT: "300"
  
  # Keycloak Configuration
  KEYCLOAK_SERVER_URL: "http://keycloak-service:8080"
  KEYCLOAK_REALM: "itdo-erp"
  KEYCLOAK_CLIENT_ID: "itdo-erp-api"
  
  # Feature Flags
  ENABLE_ANALYTICS: "true"
  ENABLE_ML_FEATURES: "true"
  ENABLE_REAL_TIME_DASHBOARD: "true"
  ENABLE_MESSAGE_QUEUE: "true"
  
  # Performance Configuration
  MAX_REQUEST_SIZE: "50MB"
  REQUEST_TIMEOUT: "120"
  CORS_ORIGINS: "*"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  ENABLE_REQUEST_LOGGING: "true"
  
  # Cache Configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  
  # Security Configuration
  JWT_ALGORITHM: "RS256"
  JWT_EXPIRE_MINUTES: "60"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: itdo-erp-frontend-config
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp
    app.kubernetes.io/component: frontend-config
data:
  # Frontend Environment Variables
  REACT_APP_API_BASE_URL: "https://api.itdo-erp.com"
  REACT_APP_KEYCLOAK_URL: "https://auth.itdo-erp.com"
  REACT_APP_KEYCLOAK_REALM: "itdo-erp"
  REACT_APP_KEYCLOAK_CLIENT_ID: "itdo-erp-web"
  
  # Feature Flags
  REACT_APP_ENABLE_ANALYTICS: "true"
  REACT_APP_ENABLE_REAL_TIME: "true"
  REACT_APP_ENABLE_NOTIFICATIONS: "true"
  
  # Performance Configuration
  REACT_APP_REQUEST_TIMEOUT: "30000"
  REACT_APP_RETRY_ATTEMPTS: "3"
  
  # UI Configuration
  REACT_APP_THEME: "default"
  REACT_APP_LANGUAGE: "en"
  REACT_APP_TIMEZONE: "UTC"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: itdo-erp
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/vnd.geo+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            image/bmp
            image/svg+xml
            image/x-icon
            text/cache-manifest
            text/css
            text/plain
            text/vcard
            text/vnd.rim.location.xloc
            text/vtt
            text/x-component
            text/x-cross-domain-policy;
        
        # Security Headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
        
        upstream backend {
            server itdo-erp-backend-service:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        server {
            listen 80;
            server_name _;
            return 301 https://$host$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name itdo-erp.com www.itdo-erp.com;
            
            # SSL Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            # Frontend Static Files
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html;
                
                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }
            
            # API Proxy
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                # Buffer sizes
                proxy_buffer_size 128k;
                proxy_buffers 4 256k;
                proxy_busy_buffers_size 256k;
            }
            
            # WebSocket Support
            location /ws/ {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
            }
            
            # Auth endpoints with stricter rate limiting
            location /api/auth/ {
                limit_req zone=login burst=5 nodelay;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }