apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  serviceName: postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/component: database
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: postgresql
        image: bitnami/postgresql:15.4.0
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: "/bitnami/postgresql"
        - name: PGDATA
          value: "/bitnami/postgresql/data"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: DATABASE_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: itdo-erp-secrets
              key: DATABASE_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: itdo-erp-config
              key: DATABASE_NAME
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: "error"
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: "pgaudit"
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "200"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: "256MB"
        - name: POSTGRESQL_EFFECTIVE_CACHE_SIZE
          value: "1GB"
        - name: POSTGRESQL_MAINTENANCE_WORK_MEM
          value: "64MB"
        - name: POSTGRESQL_CHECKPOINT_COMPLETION_TARGET
          value: "0.9"
        - name: POSTGRESQL_WAL_BUFFERS
          value: "16MB"
        - name: POSTGRESQL_DEFAULT_STATISTICS_TARGET
          value: "100"
        - name: POSTGRESQL_RANDOM_PAGE_COST
          value: "1.1"
        - name: POSTGRESQL_EFFECTIVE_IO_CONCURRENCY
          value: "200"
        - name: POSTGRESQL_WORK_MEM
          value: "4MB"
        - name: POSTGRESQL_MIN_WAL_SIZE
          value: "1GB"
        - name: POSTGRESQL_MAX_WAL_SIZE
          value: "4GB"
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "dbname=$POSTGRES_DB" -h 127.0.0.1 -p 5432
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "$POSTGRES_USER" -d "dbname=$POSTGRES_DB" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        resources:
          limits:
            memory: 2Gi
            cpu: 1000m
          requests:
            memory: 512Mi
            cpu: 250m
        volumeMounts:
        - name: postgresql-data
          mountPath: /bitnami/postgresql
        - name: dshm
          mountPath: /dev/shm
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-pvc
      - name: dshm
        emptyDir:
          medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-headless
  namespace: itdo-erp
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: false
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database