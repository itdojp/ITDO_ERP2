apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: itdo-erp-security-validator
  labels:
    app.kubernetes.io/name: itdo-erp
    app.kubernetes.io/component: admission-controller
spec:
  clientConfig:
    service:
      name: itdo-erp-admission-controller
      namespace: itdo-erp-security
      path: /validate
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["apps"]
    apiVersions: ["v1"]
    resources: ["deployments", "statefulsets", "daemonsets"]
  namespaceSelector:
    matchLabels:
      security-policy: "itdo-erp"
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admission-controller-config
  namespace: itdo-erp-security
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: config
data:
  config.yaml: |
    # ITDO ERP Admission Controller Configuration
    security_policies:
      # Image security policies
      allowed_registries:
        - "registry.itdo-erp.com"
        - "bitnami"
        - "postgres"
        - "redis"
        - "nginx"
      
      # Prohibited images
      prohibited_images:
        - "docker.io/library/ubuntu:latest"
        - "docker.io/library/centos:latest"
        - "alpine:latest"
        - "*:latest"  # Prohibit latest tags
      
      # Required image scan results
      require_vulnerability_scan: true
      max_critical_vulnerabilities: 0
      max_high_vulnerabilities: 5
      
      # Container security requirements
      security_context:
        run_as_non_root: true
        read_only_root_filesystem: false  # Disabled for compatibility
        allow_privilege_escalation: false
        required_drop_capabilities:
          - "ALL"
        allowed_add_capabilities:
          - "NET_BIND_SERVICE"  # Only for nginx
        prohibited_capabilities:
          - "SYS_ADMIN"
          - "SYS_PTRACE"
          - "SYS_MODULE"
          - "DAC_READ_SEARCH"
          - "DAC_OVERRIDE"
          - "SETUID"
          - "SETGID"
      
      # Resource requirements
      resource_requirements:
        require_limits: true
        require_requests: true
        max_cpu: "4000m"
        max_memory: "8Gi"
        max_ephemeral_storage: "10Gi"
      
      # Network policies
      network_policies:
        require_network_policy: true
        default_deny_all: true
        allowed_egress_ports:
          - 53   # DNS
          - 80   # HTTP
          - 443  # HTTPS
          - 5432 # PostgreSQL
          - 6379 # Redis
          - 8000 # Backend
          - 8080 # Frontend
      
      # Volume restrictions
      volume_restrictions:
        allowed_volume_types:
          - "configMap"
          - "secret"
          - "emptyDir"
          - "persistentVolumeClaim"
          - "projected"
          - "downwardAPI"
        prohibited_volume_types:
          - "hostPath"
          - "hostPID"
          - "hostNetwork"
          - "hostIPC"
        
        # Host path restrictions (if hostPath is needed)
        allowed_host_paths: []
      
      # Service account restrictions
      service_account_restrictions:
        prohibit_automount_service_account_token: true
        allowed_service_accounts:
          - "itdo-erp-backend"
          - "itdo-erp-frontend"
          - "postgresql"
          - "redis"
      
      # Label requirements
      required_labels:
        - "app.kubernetes.io/name"
        - "app.kubernetes.io/version"
        - "app.kubernetes.io/component"
        - "app.kubernetes.io/managed-by"
      
      # Annotation requirements
      required_annotations:
        security_scan_date: "^\\d{4}-\\d{2}-\\d{2}$"
        security_scan_result: "^(passed|failed)$"
      
      # Environment variable restrictions
      prohibited_env_patterns:
        - ".*PASSWORD.*"
        - ".*SECRET.*"
        - ".*KEY.*"
        - ".*TOKEN.*"
      
      # Compliance checks
      compliance_checks:
        pci_dss_enabled: true
        gdpr_enabled: true
        hipaa_enabled: false
        sox_enabled: true
        iso27001_enabled: true
      
    # Webhook behavior
    webhook:
      tls_cert_file: "/etc/certs/tls.crt"
      tls_private_key_file: "/etc/certs/tls.key"
      port: 8443
      health_check_port: 8080
      log_level: "info"
      metrics_enabled: true
      
    # Monitoring and alerting
    monitoring:
      prometheus_metrics: true
      alert_on_violation: true
      alert_webhook_url: "http://alertmanager:9093/api/v1/alerts"
      
    # Exemptions (for system components)
    exemptions:
      namespaces:
        - "kube-system"
        - "kube-public"
        - "kube-node-lease"
        - "monitoring"
      service_accounts:
        - "system:*"
        - "kube-*"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itdo-erp-admission-controller
  namespace: itdo-erp-security
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: security
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: admission-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: admission-controller
    spec:
      serviceAccountName: admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: admission-controller
        image: registry.itdo-erp.com/admission-controller:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook
        - containerPort: 8080
          name: health
        env:
        - name: TLS_CERT_FILE
          value: /etc/certs/tls.crt
        - name: TLS_PRIVATE_KEY_FILE
          value: /etc/certs/tls.key
        - name: CONFIG_FILE
          value: /etc/config/config.yaml
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/certs
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: webhook-certs
        secret:
          secretName: admission-controller-certs
      - name: config
        configMap:
          name: admission-controller-config

---
apiVersion: v1
kind: Service
metadata:
  name: itdo-erp-admission-controller
  namespace: itdo-erp-security
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: security
spec:
  selector:
    app.kubernetes.io/name: admission-controller
  ports:
  - name: webhook
    port: 443
    targetPort: 8443
    protocol: TCP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-controller
  namespace: itdo-erp-security
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: security

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admission-controller
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: security
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admission-controller
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-controller
subjects:
- kind: ServiceAccount
  name: admission-controller
  namespace: itdo-erp-security

---
# Certificate for webhook TLS
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: admission-controller-cert
  namespace: itdo-erp-security
  labels:
    app.kubernetes.io/name: admission-controller
    app.kubernetes.io/component: certificate
spec:
  secretName: admission-controller-certs
  issuerRef:
    name: ca-issuer
    kind: ClusterIssuer
  dnsNames:
  - itdo-erp-admission-controller
  - itdo-erp-admission-controller.itdo-erp-security
  - itdo-erp-admission-controller.itdo-erp-security.svc
  - itdo-erp-admission-controller.itdo-erp-security.svc.cluster.local