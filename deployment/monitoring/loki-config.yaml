apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: config
data:
  loki.yml: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      log_level: info
      
    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
          
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_concurrent_tail_requests: 10
      max_query_parallelism: 32
      max_query_series: 1000
      cardinality_limit: 100000
      max_streams_matchers_per_query: 1000
      max_entries_limit_per_query: 10000
      
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
            
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
        
    compactor:
      working_directory: /loki/compactor
      shared_store: filesystem
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
      
    ruler:
      storage:
        type: local
        local:
          directory: /loki/rules
      rule_path: /loki/rules
      alertmanager_url: http://alertmanager:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true
      enable_alertmanager_v2: true
      
    analytics:
      reporting_enabled: false
      
    table_manager:
      retention_deletes_enabled: true
      retention_period: 720h  # 30 days
      
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 1h
      max_chunk_age: 1h
      chunk_target_size: 1048576
      chunk_retain_period: 30s
      max_transfer_retries: 0
      
    querier:
      query_timeout: 1m
      tail_max_duration: 1h
      extra_query_delay: 0s
      query_ingesters_within: 2h
      engine:
        timeout: 3m
        max_look_back_period: 30s
        
    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100
      cache_results: true
      max_retries: 5
      parallelise_shardable_queries: true
      align_queries_with_step: true
      
    frontend:
      log_queries_longer_than: 5s
      downstream_url: http://127.0.0.1:3100
      compress_responses: true
      max_outstanding_per_tenant: 256
      
    chunk_store_config:
      max_look_back_period: 0s
      
    tracing:
      enabled: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: config
data:
  promtail.yml: |
    server:
      http_listen_port: 3101
      grpc_listen_port: 0
      log_level: info
      
    positions:
      filename: /tmp/positions.yaml
      
    clients:
      - url: http://loki:3100/loki/api/v1/push
        
    scrape_configs:
      # Kubernetes pod logs
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
            
        pipeline_stages:
          - cri: {}
          - multiline:
              firstline: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
              max_wait_time: 3s
          - regex:
              expression: '^(?P<timestamp>\S+) (?P<level>\S+) (?P<message>.*)'
          - timestamp:
              source: timestamp
              format: '2006-01-02 15:04:05'
          - labels:
              level:
              
      # ITDO ERP Backend specific logs
      - job_name: itdo-erp-backend
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - itdo-erp
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: keep
            regex: itdo-erp-backend
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
            
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                timestamp: timestamp
                level: level
                message: message
                user_id: user_id
                request_id: request_id
                method: method
                path: path
                status_code: status_code
                duration: duration
          - timestamp:
              source: timestamp
              format: '2006-01-02T15:04:05.000Z'
          - labels:
              level:
              method:
              status_code:
          - output:
              source: message
              
      # NGINX Ingress logs
      - job_name: nginx-ingress
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ingress-nginx
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: keep
            regex: ingress-nginx
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
            
        pipeline_stages:
          - cri: {}
          - regex:
              expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" (?P<request_length>\d+) (?P<request_time>\S+) \[(?P<proxy_upstream_name>[^\]]*)\] \[(?P<proxy_alternative_upstream_name>[^\]]*)\] (?P<upstream_addr>\S+) (?P<upstream_response_length>\S+) (?P<upstream_response_time>\S+) (?P<upstream_status>\S+) (?P<req_id>\S+)'
          - timestamp:
              source: time_local
              format: '02/Jan/2006:15:04:05 -0700'
          - labels:
              method:
              status:
              proxy_upstream_name:
          - output:
              source: output
              
      # System logs
      - job_name: journal
        journal:
          max_age: 12h
          labels:
            job: systemd-journal
        relabel_configs:
          - source_labels: ['__journal__systemd_unit']
            target_label: 'unit'
          - source_labels: ['__journal__hostname']
            target_label: 'hostname'
        pipeline_stages:
          - timestamp:
              source: __journal__timestamp
              format: Unix
          - labels:
              unit:
              hostname: