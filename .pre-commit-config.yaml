repos:
  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        files: ^backend/

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: ^backend/
        args: ["--profile", "black"]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        files: ^backend/
        args: [--fix, --exit-non-zero-on-fix]

  # Python type checking
  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: bash -c 'cd backend && uv run mypy --strict .'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false

  # TypeScript/JavaScript formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^frontend/.*\.(ts|tsx|js|jsx|json|css|md)$
        exclude: ^frontend/(node_modules|dist|build)/

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: ^frontend/.*\.(ts|tsx|js|jsx)$
        exclude: ^frontend/(node_modules|dist|build)/
        additional_dependencies:
          - eslint@8.56.0
          - "@typescript-eslint/parser@6.21.0"
          - "@typescript-eslint/eslint-plugin@6.21.0"
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@4.6.0

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript
        name: typescript
        entry: bash -c 'cd frontend && npm run typecheck'
        language: system
        files: ^frontend/.*\.(ts|tsx)$
        pass_filenames: false

  # General file formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.md|.*\.txt)$
      - id: end-of-file-fixer
        exclude: ^(.*\.md|.*\.txt)$
      - id: check-yaml
        files: \.(yaml|yml)$
      - id: check-json
        files: \.json$
      - id: check-toml
        files: \.toml$
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^backend/
        args: ['-r', 'backend/app/', '-f', 'json']
        exclude: ^backend/tests/

  # Docker file linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(.*\.lock|.*\.log)$

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        files: \.(yaml|yml)$
        args: ['-d', '{extends: relaxed, rules: {line-length: {max: 120}}}']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        files: \.md$
        args: ['--config', '.markdownlint.json']

  # Check for merge conflicts in specific files
  - repo: local
    hooks:
      - id: check-merge-conflict-advanced
        name: check-merge-conflict-advanced
        entry: bash -c 'if grep -r "<<<<<<< \|======= \|>>>>>>> " --include="*.py" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" .; then echo "Merge conflict markers found!"; exit 1; fi'
        language: system
        pass_filenames: false

  # Check for debug statements
  - repo: local
    hooks:
      - id: check-debug-statements
        name: check-debug-statements
        entry: bash -c 'if grep -r "console\.log\|debugger\|pdb\.set_trace\|breakpoint()" --include="*.py" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" backend/ frontend/ 2>/dev/null; then echo "Debug statements found! Please remove them."; exit 1; fi'
        language: system
        pass_filenames: false

  # Check for TODO/FIXME comments in production code
  - repo: local
    hooks:
      - id: check-todos
        name: check-todos
        entry: bash -c 'if grep -r "TODO\|FIXME\|XXX\|HACK" --include="*.py" --include="*.ts" --include="*.tsx" backend/app/ frontend/src/ 2>/dev/null; then echo "TODO/FIXME comments found in production code. Please resolve or move to issues."; exit 1; fi'
        language: system
        pass_filenames: false